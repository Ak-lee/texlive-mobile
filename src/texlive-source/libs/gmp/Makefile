# Makefile.in generated by automake 1.15 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gmp--tex-live-
pkgincludedir = $(includedir)/gmp--tex-live-
pkglibdir = $(libdir)/gmp--tex-live-
pkglibexecdir = $(libexecdir)/gmp--tex-live-
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
check_PROGRAMS = gmptest$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gmp-alloca.m4 \
	$(top_srcdir)/m4/gmp-attribute.m4 \
	$(top_srcdir)/m4/gmp-double-format.m4 \
	$(top_srcdir)/m4/gmp-extern-inline.m4 \
	$(top_srcdir)/../../m4/kpse-common.m4 \
	$(top_srcdir)/../../m4/kpse-visibility.m4 \
	$(top_srcdir)/../../m4/kpse-warnings.m4 \
	$(top_srcdir)/version.ac $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__dist_check_SCRIPTS_DIST) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = gmp.h
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libgmp_a_AR = $(AR) $(ARFLAGS)
libgmp_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = gmp-src/assert.$(OBJEXT) \
	gmp-src/compat.$(OBJEXT) gmp-src/errno.$(OBJEXT) \
	gmp-src/extract-dbl.$(OBJEXT) gmp-src/invalid.$(OBJEXT) \
	gmp-src/memory.$(OBJEXT) gmp-src/mp_bpl.$(OBJEXT) \
	gmp-src/mp_clz_tab.$(OBJEXT) gmp-src/mp_dv_tab.$(OBJEXT) \
	gmp-src/mp_get_fns.$(OBJEXT) \
	gmp-src/mp_minv_tab.$(OBJEXT) \
	gmp-src/mp_set_fns.$(OBJEXT) gmp-src/nextprime.$(OBJEXT) \
	gmp-src/primesieve.$(OBJEXT) gmp-src/tal-reent.$(OBJEXT) \
	gmp-src/version.$(OBJEXT)
am__objects_2 = mp_bases.$(OBJEXT) popcount.$(OBJEXT) \
	gmp-src/mpn/generic/add.$(OBJEXT) \
	gmp-src/mpn/generic/add_1.$(OBJEXT) \
	gmp-src/mpn/generic/add_n.$(OBJEXT) \
	gmp-src/mpn/generic/addmul_1.$(OBJEXT) \
	gmp-src/mpn/generic/bdiv_dbm1c.$(OBJEXT) \
	gmp-src/mpn/generic/bdiv_q.$(OBJEXT) \
	gmp-src/mpn/generic/binvert.$(OBJEXT) \
	gmp-src/mpn/generic/cmp.$(OBJEXT) \
	gmp-src/mpn/generic/com.$(OBJEXT) \
	gmp-src/mpn/generic/dcpi1_bdiv_q.$(OBJEXT) \
	gmp-src/mpn/generic/dcpi1_bdiv_qr.$(OBJEXT) \
	gmp-src/mpn/generic/dcpi1_div_q.$(OBJEXT) \
	gmp-src/mpn/generic/dcpi1_div_qr.$(OBJEXT) \
	gmp-src/mpn/generic/dcpi1_divappr_q.$(OBJEXT) \
	gmp-src/mpn/generic/div_q.$(OBJEXT) \
	gmp-src/mpn/generic/div_qr_2n_pi1.$(OBJEXT) \
	gmp-src/mpn/generic/dive_1.$(OBJEXT) \
	gmp-src/mpn/generic/divexact.$(OBJEXT) \
	gmp-src/mpn/generic/divrem.$(OBJEXT) \
	gmp-src/mpn/generic/divrem_1.$(OBJEXT) \
	gmp-src/mpn/generic/divrem_2.$(OBJEXT) \
	gmp-src/mpn/generic/gcd_subdiv_step.$(OBJEXT) \
	gmp-src/mpn/generic/gcdext.$(OBJEXT) \
	gmp-src/mpn/generic/gcdext_1.$(OBJEXT) \
	gmp-src/mpn/generic/gcdext_lehmer.$(OBJEXT) \
	gmp-src/mpn/generic/get_str.$(OBJEXT) \
	gmp-src/mpn/generic/hgcd.$(OBJEXT) \
	gmp-src/mpn/generic/hgcd2.$(OBJEXT) \
	gmp-src/mpn/generic/hgcd_appr.$(OBJEXT) \
	gmp-src/mpn/generic/hgcd_matrix.$(OBJEXT) \
	gmp-src/mpn/generic/hgcd_reduce.$(OBJEXT) \
	gmp-src/mpn/generic/hgcd_step.$(OBJEXT) \
	gmp-src/mpn/generic/invertappr.$(OBJEXT) \
	gmp-src/mpn/generic/lshift.$(OBJEXT) \
	gmp-src/mpn/generic/lshiftc.$(OBJEXT) \
	gmp-src/mpn/generic/matrix22_mul.$(OBJEXT) \
	gmp-src/mpn/generic/matrix22_mul1_inverse_vector.$(OBJEXT) \
	gmp-src/mpn/generic/mu_bdiv_q.$(OBJEXT) \
	gmp-src/mpn/generic/mu_div_q.$(OBJEXT) \
	gmp-src/mpn/generic/mu_div_qr.$(OBJEXT) \
	gmp-src/mpn/generic/mu_divappr_q.$(OBJEXT) \
	gmp-src/mpn/generic/mul.$(OBJEXT) \
	gmp-src/mpn/generic/mul_1.$(OBJEXT) \
	gmp-src/mpn/generic/mul_basecase.$(OBJEXT) \
	gmp-src/mpn/generic/mul_fft.$(OBJEXT) \
	gmp-src/mpn/generic/mul_n.$(OBJEXT) \
	gmp-src/mpn/generic/mullo_basecase.$(OBJEXT) \
	gmp-src/mpn/generic/mullo_n.$(OBJEXT) \
	gmp-src/mpn/generic/mulmod_bnm1.$(OBJEXT) \
	gmp-src/mpn/generic/neg.$(OBJEXT) \
	gmp-src/mpn/generic/nussbaumer_mul.$(OBJEXT) \
	gmp-src/mpn/generic/powlo.$(OBJEXT) \
	gmp-src/mpn/generic/powm.$(OBJEXT) \
	gmp-src/mpn/generic/pre_divrem_1.$(OBJEXT) \
	gmp-src/mpn/generic/redc_1.$(OBJEXT) \
	gmp-src/mpn/generic/redc_n.$(OBJEXT) \
	gmp-src/mpn/generic/rshift.$(OBJEXT) \
	gmp-src/mpn/generic/sbpi1_bdiv_q.$(OBJEXT) \
	gmp-src/mpn/generic/sbpi1_bdiv_qr.$(OBJEXT) \
	gmp-src/mpn/generic/sbpi1_div_q.$(OBJEXT) \
	gmp-src/mpn/generic/sbpi1_div_qr.$(OBJEXT) \
	gmp-src/mpn/generic/sbpi1_divappr_q.$(OBJEXT) \
	gmp-src/mpn/generic/scan1.$(OBJEXT) \
	gmp-src/mpn/generic/set_str.$(OBJEXT) \
	gmp-src/mpn/generic/sqr.$(OBJEXT) \
	gmp-src/mpn/generic/sqr_basecase.$(OBJEXT) \
	gmp-src/mpn/generic/sqrlo.$(OBJEXT) \
	gmp-src/mpn/generic/sqrlo_basecase.$(OBJEXT) \
	gmp-src/mpn/generic/sqrmod_bnm1.$(OBJEXT) \
	gmp-src/mpn/generic/sqrtrem.$(OBJEXT) \
	gmp-src/mpn/generic/sub.$(OBJEXT) \
	gmp-src/mpn/generic/sub_1.$(OBJEXT) \
	gmp-src/mpn/generic/sub_n.$(OBJEXT) \
	gmp-src/mpn/generic/submul_1.$(OBJEXT) \
	gmp-src/mpn/generic/tdiv_qr.$(OBJEXT) \
	gmp-src/mpn/generic/toom22_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom2_sqr.$(OBJEXT) \
	gmp-src/mpn/generic/toom32_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom33_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom3_sqr.$(OBJEXT) \
	gmp-src/mpn/generic/toom42_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom42_mulmid.$(OBJEXT) \
	gmp-src/mpn/generic/toom43_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom44_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom4_sqr.$(OBJEXT) \
	gmp-src/mpn/generic/toom53_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom63_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom6_sqr.$(OBJEXT) \
	gmp-src/mpn/generic/toom6h_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom8_sqr.$(OBJEXT) \
	gmp-src/mpn/generic/toom8h_mul.$(OBJEXT) \
	gmp-src/mpn/generic/toom_couple_handling.$(OBJEXT) \
	gmp-src/mpn/generic/toom_eval_dgr3_pm1.$(OBJEXT) \
	gmp-src/mpn/generic/toom_eval_dgr3_pm2.$(OBJEXT) \
	gmp-src/mpn/generic/toom_eval_pm1.$(OBJEXT) \
	gmp-src/mpn/generic/toom_eval_pm2.$(OBJEXT) \
	gmp-src/mpn/generic/toom_eval_pm2exp.$(OBJEXT) \
	gmp-src/mpn/generic/toom_eval_pm2rexp.$(OBJEXT) \
	gmp-src/mpn/generic/toom_interpolate_12pts.$(OBJEXT) \
	gmp-src/mpn/generic/toom_interpolate_16pts.$(OBJEXT) \
	gmp-src/mpn/generic/toom_interpolate_5pts.$(OBJEXT) \
	gmp-src/mpn/generic/toom_interpolate_6pts.$(OBJEXT) \
	gmp-src/mpn/generic/toom_interpolate_7pts.$(OBJEXT) \
	gmp-src/mpn/generic/toom_interpolate_8pts.$(OBJEXT) \
	gmp-src/mpn/generic/zero_p.$(OBJEXT)
am__objects_3 = gmp-src/mpz/abs.$(OBJEXT) \
	gmp-src/mpz/add.$(OBJEXT) gmp-src/mpz/add_ui.$(OBJEXT) \
	gmp-src/mpz/aorsmul.$(OBJEXT) \
	gmp-src/mpz/aorsmul_i.$(OBJEXT) \
	gmp-src/mpz/cfdiv_q_2exp.$(OBJEXT) \
	gmp-src/mpz/clear.$(OBJEXT) gmp-src/mpz/cmp_ui.$(OBJEXT) \
	gmp-src/mpz/cmpabs.$(OBJEXT) \
	gmp-src/mpz/divexact.$(OBJEXT) \
	gmp-src/mpz/fdiv_q.$(OBJEXT) \
	gmp-src/mpz/fdiv_q_ui.$(OBJEXT) \
	gmp-src/mpz/fdiv_qr.$(OBJEXT) \
	gmp-src/mpz/gcdext.$(OBJEXT) \
	gmp-src/mpz/get_si.$(OBJEXT) gmp-src/mpz/init.$(OBJEXT) \
	gmp-src/mpz/invert.$(OBJEXT) gmp-src/mpz/iset.$(OBJEXT) \
	gmp-src/mpz/iset_ui.$(OBJEXT) gmp-src/mpz/mod.$(OBJEXT) \
	gmp-src/mpz/mul.$(OBJEXT) gmp-src/mpz/mul_2exp.$(OBJEXT) \
	gmp-src/mpz/mul_si.$(OBJEXT) \
	gmp-src/mpz/mul_ui.$(OBJEXT) \
	gmp-src/mpz/n_pow_ui.$(OBJEXT) gmp-src/mpz/neg.$(OBJEXT) \
	gmp-src/mpz/powm.$(OBJEXT) gmp-src/mpz/powm_ui.$(OBJEXT) \
	gmp-src/mpz/realloc.$(OBJEXT) \
	gmp-src/mpz/scan1.$(OBJEXT) gmp-src/mpz/set.$(OBJEXT) \
	gmp-src/mpz/size.$(OBJEXT) gmp-src/mpz/set_ui.$(OBJEXT) \
	gmp-src/mpz/sizeinbase.$(OBJEXT) \
	gmp-src/mpz/sqrt.$(OBJEXT) gmp-src/mpz/sub.$(OBJEXT) \
	gmp-src/mpz/sub_ui.$(OBJEXT) gmp-src/mpz/swap.$(OBJEXT) \
	gmp-src/mpz/tdiv_q.$(OBJEXT) \
	gmp-src/mpz/tdiv_q_2exp.$(OBJEXT) \
	gmp-src/mpz/tdiv_qr.$(OBJEXT) \
	gmp-src/mpz/tdiv_r.$(OBJEXT) \
	gmp-src/mpz/tdiv_r_2exp.$(OBJEXT) \
	gmp-src/mpz/tstbit.$(OBJEXT) \
	gmp-src/mpz/ui_pow_ui.$(OBJEXT)
nodist_libgmp_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
libgmp_a_OBJECTS = $(nodist_libgmp_a_OBJECTS)
am_gmptest_OBJECTS = gmptest-gmptest.$(OBJEXT)
gmptest_OBJECTS = $(am_gmptest_OBJECTS)
gmptest_LDADD = $(LDADD)
gmptest_DEPENDENCIES = libgmp.a
am__dist_check_SCRIPTS_DIST = gmp.test
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/../../build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(nodist_libgmp_a_SOURCES) $(gmptest_SOURCES)
DIST_SOURCES = $(gmptest_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope check recheck distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/../../build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/../../am/dist_hook.am \
	$(srcdir)/../../am/rebuild.am $(srcdir)/../../am/reconfig.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/../../build-aux/compile \
	$(top_srcdir)/../../build-aux/config.guess \
	$(top_srcdir)/../../build-aux/config.sub \
	$(top_srcdir)/../../build-aux/depcomp \
	$(top_srcdir)/../../build-aux/install-sh \
	$(top_srcdir)/../../build-aux/missing \
	$(top_srcdir)/../../build-aux/test-driver \
	$(top_srcdir)/gmp-src/gmp-h.in ../../build-aux/compile \
	../../build-aux/config.guess ../../build-aux/config.sub \
	../../build-aux/depcomp ../../build-aux/install-sh \
	../../build-aux/ltmain.sh ../../build-aux/missing \
	../../build-aux/texinfo.tex ../../build-aux/ylwrap ChangeLog \
	README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -DNO_ASM
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFN_LONG_LONG_LIMB = /* #undef _LONG_LONG_LIMB */
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GMP_LIMB_BITS = 64
GMP_NAIL_BITS = 0
GMP_TREE = gmp-src
GREP = /bin/grep
HAVE_HOST_CPU_FAMILY_power = 0
HAVE_HOST_CPU_FAMILY_powerpc = 0
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBGMP_DLL = 0
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = gmp--tex-live-
PACKAGE_BUGREPORT = tex-k@tug.org
PACKAGE_NAME = gmp (TeX Live)
PACKAGE_STRING = gmp (TeX Live) 6.1.0
PACKAGE_TARNAME = gmp--tex-live-
PACKAGE_URL = 
PACKAGE_VERSION = 6.1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 6.1.0
VISIBILITY_CFLAGS = -fvisibility=hidden
WARNING_CFLAGS = -Wimplicit -Wreturn-type -Wdeclaration-after-statement -Wno-unknown-pragmas
abs_builddir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/gmp
abs_srcdir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/gmp
abs_top_builddir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/gmp
abs_top_srcdir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/gmp
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin/x86_64-pc-linux-gnu
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/texmf-dist/doc/info
install_sh = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/install-sh
libdir = ${exec_prefix}/lib/x86_64-pc-linux-gnu
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${prefix}/texmf-dist/doc/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  native
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
EXTRA_DIST = $(GMP_TREE) $(GMP_TREE)-PATCHES
NEVER_DIST = `find . $(NEVER_NAMES)`

# Files not to be distributed
NEVER_NAMES = -name .svn $(NEVER_NAMES_SUB)
NEVER_NAMES_SUB = -o -name .deps -o -name .dirstamp -o -name '*.$(OBJEXT)'
NEVER_NAMES_LT = -o -name .libs -o -name '*.lo'
SUBDIRS = native . include
AM_CPPFLAGS = -I$(srcdir)/$(GMP_TREE) -I$(srcdir)/$(GMP_TREE)/mpn/generic -DNO_ASM
AM_CFLAGS = $(VISIBILITY_CFLAGS) # $(WARNING_CFLAGS)
noinst_LIBRARIES = libgmp.a
nodist_libgmp_a_SOURCES = \
	$(basic_sources) \
	$(mpn_sources) \
	$(mpz_sources)

basic_sources = \
	gmp-src/assert.c \
	gmp-src/compat.c \
	gmp-src/errno.c \
	gmp-src/extract-dbl.c \
	gmp-src/invalid.c \
	gmp-src/memory.c \
	gmp-src/mp_bpl.c \
	gmp-src/mp_clz_tab.c \
	gmp-src/mp_dv_tab.c \
	gmp-src/mp_get_fns.c \
	gmp-src/mp_minv_tab.c \
	gmp-src/mp_set_fns.c \
	gmp-src/nextprime.c \
	gmp-src/primesieve.c \
	gmp-src/tal-reent.c \
	gmp-src/version.c

basic_unused = \
	gmp-src/tal-debug.c \
	gmp-src/tal-notreent.c

logops_n_sources = and_n.c andn_n.c ior_n.c iorn_n.c nand_n.c nior_n.c xnor_n.c xor_n.c
popham_sources = hamdist.c popcount.c
sec_aors_1_sources = sec_add_1.c sec_sub_1.c
sec_div_sources = sec_div_qr.c sec_div_r.c
sec_pi1_div_sources = sec_pi1_div_qr.c sec_pi1_div_r.c
mpn_sources = \
	mp_bases.c \
	popcount.c \
	gmp-src/mpn/generic/add.c \
	gmp-src/mpn/generic/add_1.c \
	gmp-src/mpn/generic/add_n.c \
	gmp-src/mpn/generic/addmul_1.c \
	gmp-src/mpn/generic/bdiv_dbm1c.c \
	gmp-src/mpn/generic/bdiv_q.c \
	gmp-src/mpn/generic/binvert.c \
	gmp-src/mpn/generic/cmp.c \
	gmp-src/mpn/generic/com.c \
	gmp-src/mpn/generic/dcpi1_bdiv_q.c \
	gmp-src/mpn/generic/dcpi1_bdiv_qr.c \
	gmp-src/mpn/generic/dcpi1_div_q.c \
	gmp-src/mpn/generic/dcpi1_div_qr.c \
	gmp-src/mpn/generic/dcpi1_divappr_q.c \
	gmp-src/mpn/generic/div_q.c \
	gmp-src/mpn/generic/div_qr_2n_pi1.c \
	gmp-src/mpn/generic/dive_1.c \
	gmp-src/mpn/generic/divexact.c \
	gmp-src/mpn/generic/divrem.c \
	gmp-src/mpn/generic/divrem_1.c \
	gmp-src/mpn/generic/divrem_2.c \
	gmp-src/mpn/generic/gcd_subdiv_step.c \
	gmp-src/mpn/generic/gcdext.c \
	gmp-src/mpn/generic/gcdext_1.c \
	gmp-src/mpn/generic/gcdext_lehmer.c \
	gmp-src/mpn/generic/get_str.c \
	gmp-src/mpn/generic/hgcd.c \
	gmp-src/mpn/generic/hgcd2.c \
	gmp-src/mpn/generic/hgcd_appr.c \
	gmp-src/mpn/generic/hgcd_matrix.c \
	gmp-src/mpn/generic/hgcd_reduce.c \
	gmp-src/mpn/generic/hgcd_step.c \
	gmp-src/mpn/generic/invertappr.c \
	gmp-src/mpn/generic/lshift.c \
	gmp-src/mpn/generic/lshiftc.c \
	gmp-src/mpn/generic/matrix22_mul.c \
	gmp-src/mpn/generic/matrix22_mul1_inverse_vector.c \
	gmp-src/mpn/generic/mu_bdiv_q.c \
	gmp-src/mpn/generic/mu_div_q.c \
	gmp-src/mpn/generic/mu_div_qr.c \
	gmp-src/mpn/generic/mu_divappr_q.c \
	gmp-src/mpn/generic/mul.c \
	gmp-src/mpn/generic/mul_1.c \
	gmp-src/mpn/generic/mul_basecase.c \
	gmp-src/mpn/generic/mul_fft.c \
	gmp-src/mpn/generic/mul_n.c \
	gmp-src/mpn/generic/mullo_basecase.c \
	gmp-src/mpn/generic/mullo_n.c \
	gmp-src/mpn/generic/mulmod_bnm1.c \
	gmp-src/mpn/generic/neg.c \
	gmp-src/mpn/generic/nussbaumer_mul.c \
	gmp-src/mpn/generic/powlo.c \
	gmp-src/mpn/generic/powm.c \
	gmp-src/mpn/generic/pre_divrem_1.c \
	gmp-src/mpn/generic/redc_1.c \
	gmp-src/mpn/generic/redc_n.c \
	gmp-src/mpn/generic/rshift.c \
	gmp-src/mpn/generic/sbpi1_bdiv_q.c \
	gmp-src/mpn/generic/sbpi1_bdiv_qr.c \
	gmp-src/mpn/generic/sbpi1_div_q.c \
	gmp-src/mpn/generic/sbpi1_div_qr.c \
	gmp-src/mpn/generic/sbpi1_divappr_q.c \
	gmp-src/mpn/generic/scan1.c \
	gmp-src/mpn/generic/set_str.c \
	gmp-src/mpn/generic/sqr.c \
	gmp-src/mpn/generic/sqr_basecase.c \
	gmp-src/mpn/generic/sqrlo.c \
	gmp-src/mpn/generic/sqrlo_basecase.c \
	gmp-src/mpn/generic/sqrmod_bnm1.c \
	gmp-src/mpn/generic/sqrtrem.c \
	gmp-src/mpn/generic/sub.c \
	gmp-src/mpn/generic/sub_1.c \
	gmp-src/mpn/generic/sub_n.c \
	gmp-src/mpn/generic/submul_1.c \
	gmp-src/mpn/generic/tdiv_qr.c \
	gmp-src/mpn/generic/toom22_mul.c \
	gmp-src/mpn/generic/toom2_sqr.c \
	gmp-src/mpn/generic/toom32_mul.c \
	gmp-src/mpn/generic/toom33_mul.c \
	gmp-src/mpn/generic/toom3_sqr.c \
	gmp-src/mpn/generic/toom42_mul.c \
	gmp-src/mpn/generic/toom42_mulmid.c \
	gmp-src/mpn/generic/toom43_mul.c \
	gmp-src/mpn/generic/toom44_mul.c \
	gmp-src/mpn/generic/toom4_sqr.c \
	gmp-src/mpn/generic/toom53_mul.c \
	gmp-src/mpn/generic/toom63_mul.c \
	gmp-src/mpn/generic/toom6_sqr.c \
	gmp-src/mpn/generic/toom6h_mul.c \
	gmp-src/mpn/generic/toom8_sqr.c \
	gmp-src/mpn/generic/toom8h_mul.c \
	gmp-src/mpn/generic/toom_couple_handling.c \
	gmp-src/mpn/generic/toom_eval_dgr3_pm1.c \
	gmp-src/mpn/generic/toom_eval_dgr3_pm2.c \
	gmp-src/mpn/generic/toom_eval_pm1.c \
	gmp-src/mpn/generic/toom_eval_pm2.c \
	gmp-src/mpn/generic/toom_eval_pm2exp.c \
	gmp-src/mpn/generic/toom_eval_pm2rexp.c \
	gmp-src/mpn/generic/toom_interpolate_12pts.c \
	gmp-src/mpn/generic/toom_interpolate_16pts.c \
	gmp-src/mpn/generic/toom_interpolate_5pts.c \
	gmp-src/mpn/generic/toom_interpolate_6pts.c \
	gmp-src/mpn/generic/toom_interpolate_7pts.c \
	gmp-src/mpn/generic/toom_interpolate_8pts.c \
	gmp-src/mpn/generic/zero_p.c

mpn_unused = \
	$(logops_n_sources) \
	$(sec_aors_1_sources) \
	$(sec_div_sources) \
	$(sec_pi1_div_sources) \
	fib_table.c \
	hamdist.c \
	gmp-src/mpn/generic/add_err1_n.c \
	gmp-src/mpn/generic/add_err2_n.c \
	gmp-src/mpn/generic/add_err3_n.c \
	gmp-src/mpn/generic/add_n_sub_n.c \
	gmp-src/mpn/generic/bdiv_q_1.c \
	gmp-src/mpn/generic/bdiv_qr.c \
	gmp-src/mpn/generic/broot.c \
	gmp-src/mpn/generic/brootinv.c \
	gmp-src/mpn/generic/bsqrt.c \
	gmp-src/mpn/generic/bsqrtinv.c \
	gmp-src/mpn/generic/cnd_add_n.c \
	gmp-src/mpn/generic/cnd_sub_n.c \
	gmp-src/mpn/generic/comb_tables.c \
	gmp-src/mpn/generic/copyd.c \
	gmp-src/mpn/generic/copyi.c \
	gmp-src/mpn/generic/div_qr_1.c \
	gmp-src/mpn/generic/div_qr_1n_pi1.c \
	gmp-src/mpn/generic/div_qr_2.c \
	gmp-src/mpn/generic/div_qr_2u_pi1.c \
	gmp-src/mpn/generic/diveby3.c \
	gmp-src/mpn/generic/divis.c \
	gmp-src/mpn/generic/dump.c \
	gmp-src/mpn/generic/fib2_ui.c \
	gmp-src/mpn/generic/gcd.c \
	gmp-src/mpn/generic/gcd_1.c \
	gmp-src/mpn/generic/get_d.c \
	gmp-src/mpn/generic/hgcd2_jacobi.c \
	gmp-src/mpn/generic/hgcd_jacobi.c \
	gmp-src/mpn/generic/invert.c \
	gmp-src/mpn/generic/jacbase.c \
	gmp-src/mpn/generic/jacobi.c \
	gmp-src/mpn/generic/jacobi_2.c \
	gmp-src/mpn/generic/mod_1.c \
	gmp-src/mpn/generic/mod_1_1.c \
	gmp-src/mpn/generic/mod_1_2.c \
	gmp-src/mpn/generic/mod_1_3.c \
	gmp-src/mpn/generic/mod_1_4.c \
	gmp-src/mpn/generic/mod_34lsub1.c \
	gmp-src/mpn/generic/mode1o.c \
	gmp-src/mpn/generic/mu_bdiv_qr.c \
	gmp-src/mpn/generic/mulmid.c \
	gmp-src/mpn/generic/mulmid_basecase.c \
	gmp-src/mpn/generic/mulmid_n.c \
	gmp-src/mpn/generic/perfpow.c \
	gmp-src/mpn/generic/perfsqr.c \
	gmp-src/mpn/generic/pow_1.c \
	gmp-src/mpn/generic/pre_mod_1.c \
	gmp-src/mpn/generic/random.c \
	gmp-src/mpn/generic/random2.c \
	gmp-src/mpn/generic/redc_2.c \
	gmp-src/mpn/generic/remove.c \
	gmp-src/mpn/generic/rootrem.c \
	gmp-src/mpn/generic/scan0.c \
	gmp-src/mpn/generic/sec_invert.c \
	gmp-src/mpn/generic/sec_mul.c \
	gmp-src/mpn/generic/sec_powm.c \
	gmp-src/mpn/generic/sec_sqr.c \
	gmp-src/mpn/generic/sec_tabselect.c \
	gmp-src/mpn/generic/sizeinbase.c \
	gmp-src/mpn/generic/sub_err1_n.c \
	gmp-src/mpn/generic/sub_err2_n.c \
	gmp-src/mpn/generic/sub_err3_n.c \
	gmp-src/mpn/generic/toom52_mul.c \
	gmp-src/mpn/generic/toom54_mul.c \
	gmp-src/mpn/generic/toom62_mul.c \
	gmp-src/mpn/generic/trialdiv.c \
	gmp-src/mpn/generic/zero.c

mpz_sources = \
	gmp-src/mpz/abs.c \
	gmp-src/mpz/add.c \
	gmp-src/mpz/add_ui.c \
	gmp-src/mpz/aorsmul.c \
	gmp-src/mpz/aorsmul_i.c \
	gmp-src/mpz/cfdiv_q_2exp.c \
	gmp-src/mpz/clear.c \
	gmp-src/mpz/cmp_ui.c \
	gmp-src/mpz/cmpabs.c \
	gmp-src/mpz/divexact.c \
	gmp-src/mpz/fdiv_q.c \
	gmp-src/mpz/fdiv_q_ui.c \
	gmp-src/mpz/fdiv_qr.c \
	gmp-src/mpz/gcdext.c \
	gmp-src/mpz/get_si.c \
	gmp-src/mpz/init.c \
	gmp-src/mpz/invert.c \
	gmp-src/mpz/iset.c \
	gmp-src/mpz/iset_ui.c \
	gmp-src/mpz/mod.c \
	gmp-src/mpz/mul.c \
	gmp-src/mpz/mul_2exp.c \
	gmp-src/mpz/mul_si.c \
	gmp-src/mpz/mul_ui.c \
	gmp-src/mpz/n_pow_ui.c \
	gmp-src/mpz/neg.c \
	gmp-src/mpz/powm.c \
	gmp-src/mpz/powm_ui.c \
	gmp-src/mpz/realloc.c \
	gmp-src/mpz/scan1.c \
	gmp-src/mpz/set.c \
	gmp-src/mpz/size.c \
	gmp-src/mpz/set_ui.c \
	gmp-src/mpz/sizeinbase.c \
	gmp-src/mpz/sqrt.c \
	gmp-src/mpz/sub.c \
	gmp-src/mpz/sub_ui.c \
	gmp-src/mpz/swap.c \
	gmp-src/mpz/tdiv_q.c \
	gmp-src/mpz/tdiv_q_2exp.c \
	gmp-src/mpz/tdiv_qr.c \
	gmp-src/mpz/tdiv_r.c \
	gmp-src/mpz/tdiv_r_2exp.c \
	gmp-src/mpz/tstbit.c \
	gmp-src/mpz/ui_pow_ui.c

mpz_unused = \
	gmp-src/mpz/2fac_ui.c \
	gmp-src/mpz/and.c \
	gmp-src/mpz/array_init.c \
	gmp-src/mpz/bin_ui.c \
	gmp-src/mpz/bin_uiui.c \
	gmp-src/mpz/cdiv_q.c \
	gmp-src/mpz/cdiv_q_ui.c \
	gmp-src/mpz/cdiv_qr.c \
	gmp-src/mpz/cdiv_qr_ui.c \
	gmp-src/mpz/cdiv_r.c \
	gmp-src/mpz/cdiv_r_ui.c \
	gmp-src/mpz/cdiv_ui.c \
	gmp-src/mpz/cfdiv_r_2exp.c \
	gmp-src/mpz/clears.c \
	gmp-src/mpz/clrbit.c \
	gmp-src/mpz/cmp.c \
	gmp-src/mpz/cmp_d.c \
	gmp-src/mpz/cmp_si.c \
	gmp-src/mpz/cmpabs_d.c \
	gmp-src/mpz/cmpabs_ui.c \
	gmp-src/mpz/com.c \
	gmp-src/mpz/combit.c \
	gmp-src/mpz/cong.c \
	gmp-src/mpz/cong_2exp.c \
	gmp-src/mpz/cong_ui.c \
	gmp-src/mpz/dive_ui.c \
	gmp-src/mpz/divegcd.c \
	gmp-src/mpz/divis.c \
	gmp-src/mpz/divis_2exp.c \
	gmp-src/mpz/divis_ui.c \
	gmp-src/mpz/dump.c \
	gmp-src/mpz/export.c \
	gmp-src/mpz/fac_ui.c \
	gmp-src/mpz/fdiv_qr_ui.c \
	gmp-src/mpz/fdiv_r.c \
	gmp-src/mpz/fdiv_r_ui.c \
	gmp-src/mpz/fdiv_ui.c \
	gmp-src/mpz/fib2_ui.c \
	gmp-src/mpz/fib_ui.c \
	gmp-src/mpz/fits_sint.c \
	gmp-src/mpz/fits_slong.c \
	gmp-src/mpz/fits_sshort.c \
	gmp-src/mpz/fits_uint.c \
	gmp-src/mpz/fits_ulong.c \
	gmp-src/mpz/fits_ushort.c \
	gmp-src/mpz/gcd.c \
	gmp-src/mpz/gcd_ui.c \
	gmp-src/mpz/get_d.c \
	gmp-src/mpz/get_d_2exp.c \
	gmp-src/mpz/get_str.c \
	gmp-src/mpz/get_ui.c \
	gmp-src/mpz/getlimbn.c \
	gmp-src/mpz/hamdist.c \
	gmp-src/mpz/import.c \
	gmp-src/mpz/init2.c \
	gmp-src/mpz/inits.c \
	gmp-src/mpz/inp_raw.c \
	gmp-src/mpz/inp_str.c \
	gmp-src/mpz/ior.c \
	gmp-src/mpz/iset_d.c \
	gmp-src/mpz/iset_si.c \
	gmp-src/mpz/iset_str.c \
	gmp-src/mpz/jacobi.c \
	gmp-src/mpz/kronsz.c \
	gmp-src/mpz/kronuz.c \
	gmp-src/mpz/kronzs.c \
	gmp-src/mpz/kronzu.c \
	gmp-src/mpz/lcm.c \
	gmp-src/mpz/lcm_ui.c \
	gmp-src/mpz/limbs_finish.c \
	gmp-src/mpz/limbs_modify.c \
	gmp-src/mpz/limbs_read.c \
	gmp-src/mpz/limbs_write.c \
	gmp-src/mpz/lucnum2_ui.c \
	gmp-src/mpz/lucnum_ui.c \
	gmp-src/mpz/mfac_uiui.c \
	gmp-src/mpz/millerrabin.c \
	gmp-src/mpz/nextprime.c \
	gmp-src/mpz/oddfac_1.c \
	gmp-src/mpz/out_raw.c \
	gmp-src/mpz/out_str.c \
	gmp-src/mpz/perfpow.c \
	gmp-src/mpz/perfsqr.c \
	gmp-src/mpz/popcount.c \
	gmp-src/mpz/pow_ui.c \
	gmp-src/mpz/powm_sec.c \
	gmp-src/mpz/pprime_p.c \
	gmp-src/mpz/primorial_ui.c \
	gmp-src/mpz/prodlimbs.c \
	gmp-src/mpz/random.c \
	gmp-src/mpz/random2.c \
	gmp-src/mpz/realloc2.c \
	gmp-src/mpz/remove.c \
	gmp-src/mpz/roinit_n.c \
	gmp-src/mpz/root.c \
	gmp-src/mpz/rootrem.c \
	gmp-src/mpz/rrandomb.c \
	gmp-src/mpz/scan0.c \
	gmp-src/mpz/set_d.c \
	gmp-src/mpz/set_f.c \
	gmp-src/mpz/set_q.c \
	gmp-src/mpz/set_si.c \
	gmp-src/mpz/set_str.c \
	gmp-src/mpz/setbit.c \
	gmp-src/mpz/sqrtrem.c \
	gmp-src/mpz/tdiv_q_ui.c \
	gmp-src/mpz/tdiv_qr_ui.c \
	gmp-src/mpz/tdiv_r_ui.c \
	gmp-src/mpz/tdiv_ui.c \
	gmp-src/mpz/ui_sub.c \
	gmp-src/mpz/urandomb.c \
	gmp-src/mpz/urandomm.c \
	gmp-src/mpz/xor.c

DISTCLEANFILES = mp_bases.h mp_bases.c fac_table.h fib_table.h \
	fib_table.c jacobitab.h perfsqr.h trialdivtab.h config.force
dist_check_SCRIPTS = gmp.test
TESTS = gmp.test
gmptest_SOURCES = gmptest.c
gmptest_CPPFLAGS = -Iinclude
LDADD = libgmp.a

# Reconfig
reconfig_prereq = 

# Rebuild
rebuild_prereq = 
rebuild_target = all
CLEANFILES = rebuild.stamp
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/../../am/dist_hook.am $(srcdir)/../../am/reconfig.am $(srcdir)/../../am/rebuild.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../../am/dist_hook.am $(srcdir)/../../am/reconfig.am $(srcdir)/../../am/rebuild.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
gmp.h: $(top_builddir)/config.status $(top_srcdir)/gmp-src/gmp-h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
gmp-src/$(am__dirstamp):
	@$(MKDIR_P) gmp-src
	@: > gmp-src/$(am__dirstamp)
gmp-src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gmp-src/$(DEPDIR)
	@: > gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/assert.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/compat.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/errno.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/extract-dbl.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/invalid.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/memory.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/mp_bpl.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/mp_clz_tab.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/mp_dv_tab.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/mp_get_fns.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/mp_minv_tab.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/mp_set_fns.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/nextprime.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/primesieve.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/tal-reent.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/version.$(OBJEXT): gmp-src/$(am__dirstamp) \
	gmp-src/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/$(am__dirstamp):
	@$(MKDIR_P) gmp-src/mpn/generic
	@: > gmp-src/mpn/generic/$(am__dirstamp)
gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gmp-src/mpn/generic/$(DEPDIR)
	@: > gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/add.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/add_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/add_n.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/addmul_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/bdiv_dbm1c.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/bdiv_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/binvert.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/cmp.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/com.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/dcpi1_bdiv_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/dcpi1_bdiv_qr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/dcpi1_div_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/dcpi1_div_qr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/dcpi1_divappr_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/div_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/div_qr_2n_pi1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/dive_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/divexact.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/divrem.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/divrem_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/divrem_2.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/gcd_subdiv_step.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/gcdext.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/gcdext_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/gcdext_lehmer.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/get_str.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/hgcd.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/hgcd2.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/hgcd_appr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/hgcd_matrix.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/hgcd_reduce.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/hgcd_step.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/invertappr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/lshift.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/lshiftc.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/matrix22_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/matrix22_mul1_inverse_vector.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mu_bdiv_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mu_div_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mu_div_qr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mu_divappr_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mul_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mul_basecase.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mul_fft.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mul_n.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mullo_basecase.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mullo_n.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/mulmod_bnm1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/neg.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/nussbaumer_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/powlo.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/powm.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/pre_divrem_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/redc_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/redc_n.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/rshift.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sbpi1_bdiv_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sbpi1_bdiv_qr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sbpi1_div_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sbpi1_div_qr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sbpi1_divappr_q.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/scan1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/set_str.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sqr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sqr_basecase.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sqrlo.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sqrlo_basecase.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sqrmod_bnm1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sqrtrem.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sub.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sub_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/sub_n.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/submul_1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/tdiv_qr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom22_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom2_sqr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom32_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom33_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom3_sqr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom42_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom42_mulmid.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom43_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom44_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom4_sqr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom53_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom63_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom6_sqr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom6h_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom8_sqr.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom8h_mul.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_couple_handling.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_eval_dgr3_pm1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_eval_dgr3_pm2.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_eval_pm1.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_eval_pm2.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_eval_pm2exp.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_eval_pm2rexp.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_interpolate_12pts.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_interpolate_16pts.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_interpolate_5pts.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_interpolate_6pts.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_interpolate_7pts.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/toom_interpolate_8pts.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpn/generic/zero_p.$(OBJEXT):  \
	gmp-src/mpn/generic/$(am__dirstamp) \
	gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/$(am__dirstamp):
	@$(MKDIR_P) gmp-src/mpz
	@: > gmp-src/mpz/$(am__dirstamp)
gmp-src/mpz/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gmp-src/mpz/$(DEPDIR)
	@: > gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/abs.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/add.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/add_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/aorsmul.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/aorsmul_i.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/cfdiv_q_2exp.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/clear.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/cmp_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/cmpabs.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/divexact.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/fdiv_q.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/fdiv_q_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/fdiv_qr.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/gcdext.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/get_si.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/init.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/invert.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/iset.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/iset_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/mod.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/mul.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/mul_2exp.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/mul_si.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/mul_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/n_pow_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/neg.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/powm.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/powm_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/realloc.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/scan1.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/set.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/size.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/set_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/sizeinbase.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/sqrt.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/sub.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/sub_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/swap.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/tdiv_q.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/tdiv_q_2exp.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/tdiv_qr.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/tdiv_r.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/tdiv_r_2exp.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/tstbit.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
gmp-src/mpz/ui_pow_ui.$(OBJEXT): gmp-src/mpz/$(am__dirstamp) \
	gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)

libgmp.a: $(libgmp_a_OBJECTS) $(libgmp_a_DEPENDENCIES) $(EXTRA_libgmp_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgmp.a
	$(AM_V_AR)$(libgmp_a_AR) libgmp.a $(libgmp_a_OBJECTS) $(libgmp_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgmp.a

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

gmptest$(EXEEXT): $(gmptest_OBJECTS) $(gmptest_DEPENDENCIES) $(EXTRA_gmptest_DEPENDENCIES) 
	@rm -f gmptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gmptest_OBJECTS) $(gmptest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f gmp-src/*.$(OBJEXT)
	-rm -f gmp-src/mpn/generic/*.$(OBJEXT)
	-rm -f gmp-src/mpz/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gmptest-gmptest.Po
include ./$(DEPDIR)/mp_bases.Po
include ./$(DEPDIR)/popcount.Po
include gmp-src/$(DEPDIR)/assert.Po
include gmp-src/$(DEPDIR)/compat.Po
include gmp-src/$(DEPDIR)/errno.Po
include gmp-src/$(DEPDIR)/extract-dbl.Po
include gmp-src/$(DEPDIR)/invalid.Po
include gmp-src/$(DEPDIR)/memory.Po
include gmp-src/$(DEPDIR)/mp_bpl.Po
include gmp-src/$(DEPDIR)/mp_clz_tab.Po
include gmp-src/$(DEPDIR)/mp_dv_tab.Po
include gmp-src/$(DEPDIR)/mp_get_fns.Po
include gmp-src/$(DEPDIR)/mp_minv_tab.Po
include gmp-src/$(DEPDIR)/mp_set_fns.Po
include gmp-src/$(DEPDIR)/nextprime.Po
include gmp-src/$(DEPDIR)/primesieve.Po
include gmp-src/$(DEPDIR)/tal-reent.Po
include gmp-src/$(DEPDIR)/version.Po
include gmp-src/mpn/generic/$(DEPDIR)/add.Po
include gmp-src/mpn/generic/$(DEPDIR)/add_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/add_n.Po
include gmp-src/mpn/generic/$(DEPDIR)/addmul_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/bdiv_dbm1c.Po
include gmp-src/mpn/generic/$(DEPDIR)/bdiv_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/binvert.Po
include gmp-src/mpn/generic/$(DEPDIR)/cmp.Po
include gmp-src/mpn/generic/$(DEPDIR)/com.Po
include gmp-src/mpn/generic/$(DEPDIR)/dcpi1_bdiv_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/dcpi1_bdiv_qr.Po
include gmp-src/mpn/generic/$(DEPDIR)/dcpi1_div_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/dcpi1_div_qr.Po
include gmp-src/mpn/generic/$(DEPDIR)/dcpi1_divappr_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/div_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/div_qr_2n_pi1.Po
include gmp-src/mpn/generic/$(DEPDIR)/dive_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/divexact.Po
include gmp-src/mpn/generic/$(DEPDIR)/divrem.Po
include gmp-src/mpn/generic/$(DEPDIR)/divrem_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/divrem_2.Po
include gmp-src/mpn/generic/$(DEPDIR)/gcd_subdiv_step.Po
include gmp-src/mpn/generic/$(DEPDIR)/gcdext.Po
include gmp-src/mpn/generic/$(DEPDIR)/gcdext_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/gcdext_lehmer.Po
include gmp-src/mpn/generic/$(DEPDIR)/get_str.Po
include gmp-src/mpn/generic/$(DEPDIR)/hgcd.Po
include gmp-src/mpn/generic/$(DEPDIR)/hgcd2.Po
include gmp-src/mpn/generic/$(DEPDIR)/hgcd_appr.Po
include gmp-src/mpn/generic/$(DEPDIR)/hgcd_matrix.Po
include gmp-src/mpn/generic/$(DEPDIR)/hgcd_reduce.Po
include gmp-src/mpn/generic/$(DEPDIR)/hgcd_step.Po
include gmp-src/mpn/generic/$(DEPDIR)/invertappr.Po
include gmp-src/mpn/generic/$(DEPDIR)/lshift.Po
include gmp-src/mpn/generic/$(DEPDIR)/lshiftc.Po
include gmp-src/mpn/generic/$(DEPDIR)/matrix22_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/matrix22_mul1_inverse_vector.Po
include gmp-src/mpn/generic/$(DEPDIR)/mu_bdiv_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/mu_div_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/mu_div_qr.Po
include gmp-src/mpn/generic/$(DEPDIR)/mu_divappr_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/mul_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/mul_basecase.Po
include gmp-src/mpn/generic/$(DEPDIR)/mul_fft.Po
include gmp-src/mpn/generic/$(DEPDIR)/mul_n.Po
include gmp-src/mpn/generic/$(DEPDIR)/mullo_basecase.Po
include gmp-src/mpn/generic/$(DEPDIR)/mullo_n.Po
include gmp-src/mpn/generic/$(DEPDIR)/mulmod_bnm1.Po
include gmp-src/mpn/generic/$(DEPDIR)/neg.Po
include gmp-src/mpn/generic/$(DEPDIR)/nussbaumer_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/powlo.Po
include gmp-src/mpn/generic/$(DEPDIR)/powm.Po
include gmp-src/mpn/generic/$(DEPDIR)/pre_divrem_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/redc_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/redc_n.Po
include gmp-src/mpn/generic/$(DEPDIR)/rshift.Po
include gmp-src/mpn/generic/$(DEPDIR)/sbpi1_bdiv_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/sbpi1_bdiv_qr.Po
include gmp-src/mpn/generic/$(DEPDIR)/sbpi1_div_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/sbpi1_div_qr.Po
include gmp-src/mpn/generic/$(DEPDIR)/sbpi1_divappr_q.Po
include gmp-src/mpn/generic/$(DEPDIR)/scan1.Po
include gmp-src/mpn/generic/$(DEPDIR)/set_str.Po
include gmp-src/mpn/generic/$(DEPDIR)/sqr.Po
include gmp-src/mpn/generic/$(DEPDIR)/sqr_basecase.Po
include gmp-src/mpn/generic/$(DEPDIR)/sqrlo.Po
include gmp-src/mpn/generic/$(DEPDIR)/sqrlo_basecase.Po
include gmp-src/mpn/generic/$(DEPDIR)/sqrmod_bnm1.Po
include gmp-src/mpn/generic/$(DEPDIR)/sqrtrem.Po
include gmp-src/mpn/generic/$(DEPDIR)/sub.Po
include gmp-src/mpn/generic/$(DEPDIR)/sub_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/sub_n.Po
include gmp-src/mpn/generic/$(DEPDIR)/submul_1.Po
include gmp-src/mpn/generic/$(DEPDIR)/tdiv_qr.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom22_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom2_sqr.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom32_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom33_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom3_sqr.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom42_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom42_mulmid.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom43_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom44_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom4_sqr.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom53_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom63_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom6_sqr.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom6h_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom8_sqr.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom8h_mul.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_couple_handling.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_eval_dgr3_pm1.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_eval_dgr3_pm2.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_eval_pm1.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_eval_pm2.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_eval_pm2exp.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_eval_pm2rexp.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_interpolate_12pts.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_interpolate_16pts.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_interpolate_5pts.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_interpolate_6pts.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_interpolate_7pts.Po
include gmp-src/mpn/generic/$(DEPDIR)/toom_interpolate_8pts.Po
include gmp-src/mpn/generic/$(DEPDIR)/zero_p.Po
include gmp-src/mpz/$(DEPDIR)/abs.Po
include gmp-src/mpz/$(DEPDIR)/add.Po
include gmp-src/mpz/$(DEPDIR)/add_ui.Po
include gmp-src/mpz/$(DEPDIR)/aorsmul.Po
include gmp-src/mpz/$(DEPDIR)/aorsmul_i.Po
include gmp-src/mpz/$(DEPDIR)/cfdiv_q_2exp.Po
include gmp-src/mpz/$(DEPDIR)/clear.Po
include gmp-src/mpz/$(DEPDIR)/cmp_ui.Po
include gmp-src/mpz/$(DEPDIR)/cmpabs.Po
include gmp-src/mpz/$(DEPDIR)/divexact.Po
include gmp-src/mpz/$(DEPDIR)/fdiv_q.Po
include gmp-src/mpz/$(DEPDIR)/fdiv_q_ui.Po
include gmp-src/mpz/$(DEPDIR)/fdiv_qr.Po
include gmp-src/mpz/$(DEPDIR)/gcdext.Po
include gmp-src/mpz/$(DEPDIR)/get_si.Po
include gmp-src/mpz/$(DEPDIR)/init.Po
include gmp-src/mpz/$(DEPDIR)/invert.Po
include gmp-src/mpz/$(DEPDIR)/iset.Po
include gmp-src/mpz/$(DEPDIR)/iset_ui.Po
include gmp-src/mpz/$(DEPDIR)/mod.Po
include gmp-src/mpz/$(DEPDIR)/mul.Po
include gmp-src/mpz/$(DEPDIR)/mul_2exp.Po
include gmp-src/mpz/$(DEPDIR)/mul_si.Po
include gmp-src/mpz/$(DEPDIR)/mul_ui.Po
include gmp-src/mpz/$(DEPDIR)/n_pow_ui.Po
include gmp-src/mpz/$(DEPDIR)/neg.Po
include gmp-src/mpz/$(DEPDIR)/powm.Po
include gmp-src/mpz/$(DEPDIR)/powm_ui.Po
include gmp-src/mpz/$(DEPDIR)/realloc.Po
include gmp-src/mpz/$(DEPDIR)/scan1.Po
include gmp-src/mpz/$(DEPDIR)/set.Po
include gmp-src/mpz/$(DEPDIR)/set_ui.Po
include gmp-src/mpz/$(DEPDIR)/size.Po
include gmp-src/mpz/$(DEPDIR)/sizeinbase.Po
include gmp-src/mpz/$(DEPDIR)/sqrt.Po
include gmp-src/mpz/$(DEPDIR)/sub.Po
include gmp-src/mpz/$(DEPDIR)/sub_ui.Po
include gmp-src/mpz/$(DEPDIR)/swap.Po
include gmp-src/mpz/$(DEPDIR)/tdiv_q.Po
include gmp-src/mpz/$(DEPDIR)/tdiv_q_2exp.Po
include gmp-src/mpz/$(DEPDIR)/tdiv_qr.Po
include gmp-src/mpz/$(DEPDIR)/tdiv_r.Po
include gmp-src/mpz/$(DEPDIR)/tdiv_r_2exp.Po
include gmp-src/mpz/$(DEPDIR)/tstbit.Po
include gmp-src/mpz/$(DEPDIR)/ui_pow_ui.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

gmptest-gmptest.o: gmptest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gmptest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gmptest-gmptest.o -MD -MP -MF $(DEPDIR)/gmptest-gmptest.Tpo -c -o gmptest-gmptest.o `test -f 'gmptest.c' || echo '$(srcdir)/'`gmptest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gmptest-gmptest.Tpo $(DEPDIR)/gmptest-gmptest.Po
#	$(AM_V_CC)source='gmptest.c' object='gmptest-gmptest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gmptest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gmptest-gmptest.o `test -f 'gmptest.c' || echo '$(srcdir)/'`gmptest.c

gmptest-gmptest.obj: gmptest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gmptest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gmptest-gmptest.obj -MD -MP -MF $(DEPDIR)/gmptest-gmptest.Tpo -c -o gmptest-gmptest.obj `if test -f 'gmptest.c'; then $(CYGPATH_W) 'gmptest.c'; else $(CYGPATH_W) '$(srcdir)/gmptest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gmptest-gmptest.Tpo $(DEPDIR)/gmptest-gmptest.Po
#	$(AM_V_CC)source='gmptest.c' object='gmptest-gmptest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gmptest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gmptest-gmptest.obj `if test -f 'gmptest.c'; then $(CYGPATH_W) 'gmptest.c'; else $(CYGPATH_W) '$(srcdir)/gmptest.c'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(dist_check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) \
	  $(dist_check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LIBRARIES) config.h
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f gmp-src/$(DEPDIR)/$(am__dirstamp)
	-rm -f gmp-src/$(am__dirstamp)
	-rm -f gmp-src/mpn/generic/$(DEPDIR)/$(am__dirstamp)
	-rm -f gmp-src/mpn/generic/$(am__dirstamp)
	-rm -f gmp-src/mpz/$(DEPDIR)/$(am__dirstamp)
	-rm -f gmp-src/mpz/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR) gmp-src/$(DEPDIR) gmp-src/mpn/generic/$(DEPDIR) gmp-src/mpz/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR) gmp-src/$(DEPDIR) gmp-src/mpn/generic/$(DEPDIR) gmp-src/mpz/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) all check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-cscope clean-generic \
	clean-noinstLIBRARIES cscope cscopelist-am ctags ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-hook dist-lzip dist-shar \
	dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile

dist-hook:
	cd "$(distdir)" && rm -rf $(NEVER_DIST)
$(libgmp_a_OBJECTS): mp_bases.h fac_table.h fib_table.h

$(logops_n_sources):
	@echo "#define OPERATION_`echo $@ | sed 's/\.c//'` 1" >$@
	@echo "#include <logops_n.c>" >>$@
$(popham_sources):
	@echo "#define OPERATION_`echo $@ | sed 's/\.c//'` 1" >$@
	@echo "#include <popham.c>" >>$@
$(sec_aors_1_sources):
	@echo "#define OPERATION_`echo $@ | sed 's/\.c//'` 1" >$@
	@echo "#include <sec_aors_1.c>" >>$@
$(sec_div_sources):
	@echo "#define OPERATION_`echo $@ | sed 's/\.c//'` 1" >$@
	@echo "#include <sec_div.c>" >>$@
$(sec_pi1_div_sources):
	@echo "#define OPERATION_`echo $@ | sed 's/\.c//'` 1" >$@
	@echo "#include <sec_pi1_div.c>" >>$@

native/stamp-bases:
	cd native && $(MAKE) $(AM_MAKEFLAGS) stamp-bases
mp_bases.h: native/stamp-bases
	$(AM_V_GEN)native/gen-bases header $(GMP_LIMB_BITS) $(GMP_NAIL_BITS) >$@ || (rm -f $@; exit 1)
mp_bases.c: mp_bases.h
	$(AM_V_GEN)native/gen-bases table $(GMP_LIMB_BITS) $(GMP_NAIL_BITS) >$@ || (rm -f $@; exit 1)

native/stamp-fac:
	cd native && $(MAKE) $(AM_MAKEFLAGS) stamp-fac
fac_table.h: native/stamp-fac
	$(AM_V_GEN)native/gen-fac $(GMP_LIMB_BITS) $(GMP_NAIL_BITS) >$@ || (rm -f $@; exit 1)

native/stamp-fib:
	cd native && $(MAKE) $(AM_MAKEFLAGS) stamp-fib
fib_table.h: native/stamp-fib
	$(AM_V_GEN)native/gen-fib header $(GMP_LIMB_BITS) $(GMP_NAIL_BITS) >$@ || (rm -f $@; exit 1)
fib_table.c: fib_table.h
	$(AM_V_GEN)native/gen-fib table $(GMP_LIMB_BITS) $(GMP_NAIL_BITS) >$@ || (rm -f $@; exit 1)

native/stamp-jacobitab:
	cd native && $(MAKE) $(AM_MAKEFLAGS) stamp-jacobitab
jacobitab.h: native/stamp-jacobitab
	$(AM_V_GEN)native/gen-jacobitab >$@ || (rm -f $@; exit 1)

native/stamp-psqr:
	cd native && $(MAKE) $(AM_MAKEFLAGS) stamp-psqr
perfsqr.h: native/stamp-psqr
	$(AM_V_GEN)native/gen-psqr $(GMP_LIMB_BITS) $(GMP_NAIL_BITS) >$@ || (rm -f $@; exit 1)

native/stamp-trialdivtab:
	cd native && $(MAKE) $(AM_MAKEFLAGS) stamp-trialdivtab
trialdivtab.h: native/stamp-trialdivtab
	$(AM_V_GEN)native/gen-trialdivtab $(GMP_LIMB_BITS) 8000 >$@ || (rm -f $@; exit 1)
gmp.log: gmptest$(EXEEXT)
config.force: $(reconfig_prereq)
	@if test -f $@; then :; else \
	  trap 'rm -rf reconfig.lock' 1 2 13 15; \
	  if mkdir reconfig.lock 2>/dev/null; then \
	    echo timestamp >$@; \
	    $(SHELL) ./config.status --recheck; \
	    rmdir reconfig.lock; \
	  else \
	    while test -d rebuild.lock && test -z "$$dry"; do sleep 1; done; \
	    test -f $@; \
	  fi; \
	fi
rebuild.stamp: $(rebuild_target)
	echo timestamp >$@

.PHONY: rebuild
rebuild: $(rebuild_prereq)
	@dry=; for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=*|--*);; \
	    *n*) dry=:;; \
	  esac; \
	done; \
	if test -f rebuild.stamp; then :; else \
	  $$dry trap 'rm -rf rebuild.lock' 1 2 13 15; \
	  if $$dry mkdir rebuild.lock 2>/dev/null; then \
	    $(MAKE) $(AM_MAKEFLAGS) rebuild.stamp; \
	    $$dry rmdir rebuild.lock; \
	  else \
	    while test -d rebuild.lock && test -z "$$dry"; do sleep 1; done; \
	  fi; \
	  $$dry test -f rebuild.stamp; exit $$?; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
