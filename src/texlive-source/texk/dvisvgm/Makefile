# Makefile.in generated by automake 1.15 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/dvisvgm--tex-live-
pkgincludedir = $(includedir)/dvisvgm--tex-live-
pkglibdir = $(libdir)/dvisvgm--tex-live-
pkglibexecdir = $(libexecdir)/dvisvgm--tex-live-
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = -DTEXLIVEWIN32
bin_PROGRAMS = dvisvgm$(EXEEXT)
am__append_2 = \
	dvisvgm-src/src/DLLoader.cpp

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../../m4/kpse-common.m4 \
	$(top_srcdir)/../../m4/kpse-cxx-hack.m4 \
	$(top_srcdir)/../../m4/kpse-freetype2-flags.m4 \
	$(top_srcdir)/../../m4/kpse-kpathsea-flags.m4 \
	$(top_srcdir)/../../m4/kpse-potrace-flags.m4 \
	$(top_srcdir)/../../m4/kpse-warnings.m4 \
	$(top_srcdir)/../../m4/kpse-win32.m4 \
	$(top_srcdir)/../../m4/kpse-zlib-flags.m4 \
	$(top_srcdir)/../../m4/libtool.m4 \
	$(top_srcdir)/../../m4/ltoptions.m4 \
	$(top_srcdir)/../../m4/ltsugar.m4 \
	$(top_srcdir)/../../m4/ltversion.m4 \
	$(top_srcdir)/../../m4/lt~obsolete.m4 $(top_srcdir)/version.ac \
	$(top_srcdir)/ac/dvisvgm.ac $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libclipper_a_AR = $(AR) $(ARFLAGS)
libclipper_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
nodist_libclipper_a_OBJECTS =  \
	dvisvgm-src/clipper/clipper.$(OBJEXT)
libclipper_a_OBJECTS = $(nodist_libclipper_a_OBJECTS)
libdvisvgm_a_AR = $(AR) $(ARFLAGS)
libdvisvgm_a_LIBADD =
am__objects_1 = dvisvgm-src/src/DLLoader.$(OBJEXT)
nodist_libdvisvgm_a_OBJECTS =  \
	dvisvgm-src/src/BasicDVIReader.$(OBJEXT) \
	dvisvgm-src/src/Bezier.$(OBJEXT) \
	dvisvgm-src/src/BgColorSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/Bitmap.$(OBJEXT) \
	dvisvgm-src/src/BoundingBox.$(OBJEXT) \
	dvisvgm-src/src/CMap.$(OBJEXT) \
	dvisvgm-src/src/CMapManager.$(OBJEXT) \
	dvisvgm-src/src/CMapReader.$(OBJEXT) \
	dvisvgm-src/src/CRC32.$(OBJEXT) \
	dvisvgm-src/src/Calculator.$(OBJEXT) \
	dvisvgm-src/src/CharMapID.$(OBJEXT) \
	dvisvgm-src/src/CmdLineParserBase.$(OBJEXT) \
	dvisvgm-src/src/Color.$(OBJEXT) \
	dvisvgm-src/src/ColorSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/CommandLine.$(OBJEXT) \
	dvisvgm-src/src/DVIReader.$(OBJEXT) \
	dvisvgm-src/src/DVIToSVG.$(OBJEXT) \
	dvisvgm-src/src/DVIToSVGActions.$(OBJEXT) \
	dvisvgm-src/src/Directory.$(OBJEXT) \
	dvisvgm-src/src/DvisvgmSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/EPSFile.$(OBJEXT) \
	dvisvgm-src/src/EPSToSVG.$(OBJEXT) \
	dvisvgm-src/src/EmSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/EncFile.$(OBJEXT) \
	dvisvgm-src/src/FileFinder.$(OBJEXT) \
	dvisvgm-src/src/FilePath.$(OBJEXT) \
	dvisvgm-src/src/FileSystem.$(OBJEXT) \
	dvisvgm-src/src/Font.$(OBJEXT) \
	dvisvgm-src/src/FontCache.$(OBJEXT) \
	dvisvgm-src/src/FontEncoding.$(OBJEXT) \
	dvisvgm-src/src/FontEngine.$(OBJEXT) \
	dvisvgm-src/src/FontManager.$(OBJEXT) \
	dvisvgm-src/src/FontMap.$(OBJEXT) \
	dvisvgm-src/src/FontMetrics.$(OBJEXT) \
	dvisvgm-src/src/GFReader.$(OBJEXT) \
	dvisvgm-src/src/GFGlyphTracer.$(OBJEXT) \
	dvisvgm-src/src/GFTracer.$(OBJEXT) \
	dvisvgm-src/src/Ghostscript.$(OBJEXT) \
	dvisvgm-src/src/HtmlSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/InputBuffer.$(OBJEXT) \
	dvisvgm-src/src/InputReader.$(OBJEXT) \
	dvisvgm-src/src/JFM.$(OBJEXT) \
	dvisvgm-src/src/Length.$(OBJEXT) \
	dvisvgm-src/src/MapLine.$(OBJEXT) \
	dvisvgm-src/src/Matrix.$(OBJEXT) \
	dvisvgm-src/src/Message.$(OBJEXT) \
	dvisvgm-src/src/MetafontWrapper.$(OBJEXT) \
	dvisvgm-src/src/NoPsSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/PSInterpreter.$(OBJEXT) \
	dvisvgm-src/src/PSPattern.$(OBJEXT) \
	dvisvgm-src/src/PSPreviewFilter.$(OBJEXT) \
	dvisvgm-src/src/PdfSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/PageRanges.$(OBJEXT) \
	dvisvgm-src/src/PageSize.$(OBJEXT) \
	dvisvgm-src/src/PathClipper.$(OBJEXT) \
	dvisvgm-src/src/PreScanDVIReader.$(OBJEXT) \
	dvisvgm-src/src/Process.$(OBJEXT) \
	dvisvgm-src/src/PsSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/psdefs.$(OBJEXT) \
	dvisvgm-src/src/RangeMap.$(OBJEXT) \
	dvisvgm-src/src/SVGOutput.$(OBJEXT) \
	dvisvgm-src/src/SVGTree.$(OBJEXT) \
	dvisvgm-src/src/ShadingPatch.$(OBJEXT) \
	dvisvgm-src/src/SignalHandler.$(OBJEXT) \
	dvisvgm-src/src/SpecialManager.$(OBJEXT) \
	dvisvgm-src/src/StreamReader.$(OBJEXT) \
	dvisvgm-src/src/StreamWriter.$(OBJEXT) \
	dvisvgm-src/src/Subfont.$(OBJEXT) \
	dvisvgm-src/src/System.$(OBJEXT) \
	dvisvgm-src/src/TFM.$(OBJEXT) \
	dvisvgm-src/src/TensorProductPatch.$(OBJEXT) \
	dvisvgm-src/src/Terminal.$(OBJEXT) \
	dvisvgm-src/src/ToUnicodeMap.$(OBJEXT) \
	dvisvgm-src/src/TpicSpecialHandler.$(OBJEXT) \
	dvisvgm-src/src/TriangularPatch.$(OBJEXT) \
	dvisvgm-src/src/Unicode.$(OBJEXT) \
	dvisvgm-src/src/VFReader.$(OBJEXT) \
	dvisvgm-src/src/XMLDocument.$(OBJEXT) \
	dvisvgm-src/src/XMLNode.$(OBJEXT) \
	dvisvgm-src/src/XMLString.$(OBJEXT) $(am__objects_1)
libdvisvgm_a_OBJECTS = $(nodist_libdvisvgm_a_OBJECTS)
libxxhash_a_AR = $(AR) $(ARFLAGS)
libxxhash_a_LIBADD =
nodist_libxxhash_a_OBJECTS = dvisvgm-src/xxHash/xxhash.$(OBJEXT)
libxxhash_a_OBJECTS = $(nodist_libxxhash_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"
PROGRAMS = $(bin_PROGRAMS)
nodist_dvisvgm_OBJECTS = dvisvgm-src/src/dvisvgm.$(OBJEXT) \
	dvisvgm-src/src/gzstream.$(OBJEXT)
dvisvgm_OBJECTS = $(nodist_dvisvgm_OBJECTS)
dvisvgm_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
dvisvgm_DEPENDENCIES = $(noinst_LIBRARIES) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/../../build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(nodist_libclipper_a_SOURCES) \
	$(nodist_libdvisvgm_a_SOURCES) $(nodist_libxxhash_a_SOURCES) \
	$(nodist_dvisvgm_SOURCES)
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(nodist_man_MANS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/../../build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__DIST_COMMON = $(srcdir)/../../am/dist_hook.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/../../build-aux/compile \
	$(top_srcdir)/../../build-aux/config.guess \
	$(top_srcdir)/../../build-aux/config.sub \
	$(top_srcdir)/../../build-aux/depcomp \
	$(top_srcdir)/../../build-aux/install-sh \
	$(top_srcdir)/../../build-aux/ltmain.sh \
	$(top_srcdir)/../../build-aux/missing \
	$(top_srcdir)/../../build-aux/test-driver \
	../../build-aux/compile ../../build-aux/config.guess \
	../../build-aux/config.sub ../../build-aux/depcomp \
	../../build-aux/install-sh ../../build-aux/ltmain.sh \
	../../build-aux/missing ../../build-aux/texinfo.tex \
	../../build-aux/ylwrap ChangeLog
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CXXLD = $(top_builddir)/CXXLD.sh
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
DVISVGM_TREE = dvisvgm-src
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FREETYPE2_DEPEND = ${top_builddir}/../../libs/freetype2/libfreetype.a
FREETYPE2_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/freetype2/freetype2
FREETYPE2_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/freetype2/libfreetype.a
FT2_CONFIG = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KPATHSEA_DEPEND = ${top_builddir}/../kpathsea/libkpathsea.la
KPATHSEA_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk
KPATHSEA_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/kpathsea/libkpathsea.la
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBGS_INCLUDES = 
LIBGS_LIBS = -ldl
LIBOBJS = 
LIBS = -ldl -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = dvisvgm--tex-live-
PACKAGE_BUGREPORT = tex-k@tug.org
PACKAGE_NAME = dvisvgm (TeX Live)
PACKAGE_STRING = dvisvgm (TeX Live) 1.14.2
PACKAGE_TARNAME = dvisvgm--tex-live-
PACKAGE_URL = 
PACKAGE_VERSION = 1.14.2
PATH_SEPARATOR = :
PKG_CONFIG = pkg-config
POTRACE_DEPEND = ${top_builddir}/../../libs/potrace/libpotrace.a
POTRACE_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/potrace/include
POTRACE_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/potrace/libpotrace.a
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.14.2
WARNING_CFLAGS = -Wimplicit -Wreturn-type -Wdeclaration-after-statement -Wno-unknown-pragmas
WARNING_CXXFLAGS = -Wreturn-type -Wno-unknown-pragmas -Wno-write-strings
ZLIB_DEPEND = ${top_builddir}/../../libs/zlib/libz.a
ZLIB_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/zlib/include
ZLIB_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/zlib/libz.a
abs_builddir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/dvisvgm
abs_srcdir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/dvisvgm
abs_top_builddir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/dvisvgm
abs_top_srcdir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/dvisvgm
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin/x86_64-pc-linux-gnu
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/texmf-dist/doc/info
install_sh = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/install-sh
libdir = ${exec_prefix}/lib/x86_64-pc-linux-gnu
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${prefix}/texmf-dist/doc/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .

#************************************************************************
#
#  Adapted for TeX Live from dvisvgm-0.8.7/Makefile.am
#  Copyright (C) 2005-2009 Martin Gieseking <martin.gieseking@uos.de>
#
#************************************************************************
EXTRA_DIST = $(DVISVGM_TREE) $(DVISVGM_TREE)-PATCHES $(TESTS)
NEVER_DIST = `find . $(NEVER_NAMES)`

# Files not to be distributed
NEVER_NAMES = -name .svn $(NEVER_NAMES_SUB)
NEVER_NAMES_SUB = -o -name .deps -o -name .dirstamp -o -name '*.$(OBJEXT)'
NEVER_NAMES_LT = -o -name .libs -o -name '*.lo'
AM_CPPFLAGS = -I$(top_srcdir)/$(DVISVGM_TREE)/clipper \
	-I$(top_srcdir)/$(DVISVGM_TREE)/src \
	-I$(top_srcdir)/$(DVISVGM_TREE)/xxHash $(KPATHSEA_INCLUDES) \
	$(POTRACE_INCLUDES) $(FREETYPE2_INCLUDES) $(ZLIB_INCLUDES) \
	$(LIBGS_INCLUDES) $(am__append_1)
AM_CFLAGS = $(WARNING_CFLAGS)
AM_CXXFLAGS = $(WARNING_CXXFLAGS)
nodist_man_MANS = \
	$(DVISVGM_TREE)/doc/dvisvgm.1

nodist_dvisvgm_SOURCES = \
	dvisvgm-src/src/dvisvgm.cpp \
	dvisvgm-src/src/gzstream.cpp

dvisvgm_dependencies = $(KPATHSEA_DEPEND) $(ZLIB_DEPEND) $(FREETYPE2_DEPEND)
LDADD = $(noinst_LIBRARIES) $(KPATHSEA_LIBS) $(POTRACE_LIBS) \
	$(FREETYPE2_LIBS) $(ZLIB_LIBS) $(LIBGS_LIBS)
noinst_LIBRARIES = libdvisvgm.a libclipper.a libxxhash.a
nodist_libdvisvgm_a_SOURCES = dvisvgm-src/src/BasicDVIReader.cpp \
	dvisvgm-src/src/Bezier.cpp \
	dvisvgm-src/src/BgColorSpecialHandler.cpp \
	dvisvgm-src/src/Bitmap.cpp \
	dvisvgm-src/src/BoundingBox.cpp dvisvgm-src/src/CMap.cpp \
	dvisvgm-src/src/CMapManager.cpp \
	dvisvgm-src/src/CMapReader.cpp dvisvgm-src/src/CRC32.cpp \
	dvisvgm-src/src/Calculator.cpp \
	dvisvgm-src/src/CharMapID.cpp \
	dvisvgm-src/src/CmdLineParserBase.cpp \
	dvisvgm-src/src/Color.cpp \
	dvisvgm-src/src/ColorSpecialHandler.cpp \
	dvisvgm-src/src/CommandLine.cpp \
	dvisvgm-src/src/DVIReader.cpp \
	dvisvgm-src/src/DVIToSVG.cpp \
	dvisvgm-src/src/DVIToSVGActions.cpp \
	dvisvgm-src/src/DependencyGraph.h \
	dvisvgm-src/src/Directory.cpp \
	dvisvgm-src/src/DvisvgmSpecialHandler.cpp \
	dvisvgm-src/src/EPSFile.cpp dvisvgm-src/src/EPSToSVG.cpp \
	dvisvgm-src/src/EmSpecialHandler.cpp \
	dvisvgm-src/src/EncFile.cpp \
	dvisvgm-src/src/FileFinder.cpp \
	dvisvgm-src/src/FilePath.cpp \
	dvisvgm-src/src/FileSystem.cpp dvisvgm-src/src/Font.cpp \
	dvisvgm-src/src/FontCache.cpp \
	dvisvgm-src/src/FontEncoding.cpp \
	dvisvgm-src/src/FontEngine.cpp \
	dvisvgm-src/src/FontManager.cpp \
	dvisvgm-src/src/FontMap.cpp \
	dvisvgm-src/src/FontMetrics.cpp \
	dvisvgm-src/src/GFReader.cpp \
	dvisvgm-src/src/GFGlyphTracer.cpp \
	dvisvgm-src/src/GFTracer.cpp \
	dvisvgm-src/src/Ghostscript.cpp \
	dvisvgm-src/src/HtmlSpecialHandler.cpp \
	dvisvgm-src/src/InputBuffer.cpp \
	dvisvgm-src/src/InputReader.cpp dvisvgm-src/src/JFM.cpp \
	dvisvgm-src/src/Length.cpp dvisvgm-src/src/MapLine.cpp \
	dvisvgm-src/src/Matrix.cpp dvisvgm-src/src/Message.cpp \
	dvisvgm-src/src/MetafontWrapper.cpp \
	dvisvgm-src/src/NoPsSpecialHandler.cpp \
	dvisvgm-src/src/PSInterpreter.cpp \
	dvisvgm-src/src/PSPattern.cpp \
	dvisvgm-src/src/PSPreviewFilter.cpp \
	dvisvgm-src/src/PdfSpecialHandler.cpp \
	dvisvgm-src/src/PageRanges.cpp \
	dvisvgm-src/src/PageSize.cpp \
	dvisvgm-src/src/PathClipper.cpp \
	dvisvgm-src/src/PreScanDVIReader.cpp \
	dvisvgm-src/src/Process.cpp \
	dvisvgm-src/src/PsSpecialHandler.cpp \
	dvisvgm-src/src/psdefs.cpp dvisvgm-src/src/RangeMap.cpp \
	dvisvgm-src/src/SVGOutput.cpp \
	dvisvgm-src/src/SVGTree.cpp \
	dvisvgm-src/src/ShadingPatch.cpp \
	dvisvgm-src/src/SignalHandler.cpp \
	dvisvgm-src/src/SpecialManager.cpp \
	dvisvgm-src/src/StreamReader.cpp \
	dvisvgm-src/src/StreamWriter.cpp \
	dvisvgm-src/src/Subfont.cpp dvisvgm-src/src/System.cpp \
	dvisvgm-src/src/TFM.cpp \
	dvisvgm-src/src/TensorProductPatch.cpp \
	dvisvgm-src/src/Terminal.cpp \
	dvisvgm-src/src/ToUnicodeMap.cpp \
	dvisvgm-src/src/TpicSpecialHandler.cpp \
	dvisvgm-src/src/TriangularPatch.cpp \
	dvisvgm-src/src/Unicode.cpp dvisvgm-src/src/VFReader.cpp \
	dvisvgm-src/src/XMLDocument.cpp \
	dvisvgm-src/src/XMLNode.cpp \
	dvisvgm-src/src/XMLString.cpp $(am__append_2)
nodist_libclipper_a_SOURCES = \
	dvisvgm-src/clipper/clipper.cpp

nodist_libxxhash_a_SOURCES = \
	dvisvgm-src/xxHash/xxhash.c

DISTCLEANFILES = config.force CXXLD.sh
TESTS = tests/dvisvgm.test
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/../../am/dist_hook.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../../am/dist_hook.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
dvisvgm-src/clipper/$(am__dirstamp):
	@$(MKDIR_P) dvisvgm-src/clipper
	@: > dvisvgm-src/clipper/$(am__dirstamp)
dvisvgm-src/clipper/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dvisvgm-src/clipper/$(DEPDIR)
	@: > dvisvgm-src/clipper/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/clipper/clipper.$(OBJEXT):  \
	dvisvgm-src/clipper/$(am__dirstamp) \
	dvisvgm-src/clipper/$(DEPDIR)/$(am__dirstamp)

libclipper.a: $(libclipper_a_OBJECTS) $(libclipper_a_DEPENDENCIES) $(EXTRA_libclipper_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libclipper.a
	$(AM_V_AR)$(libclipper_a_AR) libclipper.a $(libclipper_a_OBJECTS) $(libclipper_a_LIBADD)
	$(AM_V_at)$(RANLIB) libclipper.a
dvisvgm-src/src/$(am__dirstamp):
	@$(MKDIR_P) dvisvgm-src/src
	@: > dvisvgm-src/src/$(am__dirstamp)
dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dvisvgm-src/src/$(DEPDIR)
	@: > dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/BasicDVIReader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Bezier.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/BgColorSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Bitmap.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/BoundingBox.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/CMap.$(OBJEXT): dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/CMapManager.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/CMapReader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/CRC32.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Calculator.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/CharMapID.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/CmdLineParserBase.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Color.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/ColorSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/CommandLine.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/DVIReader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/DVIToSVG.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/DVIToSVGActions.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Directory.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/DvisvgmSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/EPSFile.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/EPSToSVG.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/EmSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/EncFile.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FileFinder.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FilePath.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FileSystem.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Font.$(OBJEXT): dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FontCache.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FontEncoding.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FontEngine.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FontManager.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FontMap.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/FontMetrics.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/GFReader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/GFGlyphTracer.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/GFTracer.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Ghostscript.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/HtmlSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/InputBuffer.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/InputReader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/JFM.$(OBJEXT): dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Length.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/MapLine.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Matrix.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Message.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/MetafontWrapper.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/NoPsSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PSInterpreter.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PSPattern.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PSPreviewFilter.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PdfSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PageRanges.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PageSize.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PathClipper.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PreScanDVIReader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Process.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/PsSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/psdefs.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/RangeMap.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/SVGOutput.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/SVGTree.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/ShadingPatch.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/SignalHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/SpecialManager.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/StreamReader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/StreamWriter.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Subfont.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/System.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/TFM.$(OBJEXT): dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/TensorProductPatch.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Terminal.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/ToUnicodeMap.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/TpicSpecialHandler.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/TriangularPatch.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/Unicode.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/VFReader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/XMLDocument.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/XMLNode.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/XMLString.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/DLLoader.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)

libdvisvgm.a: $(libdvisvgm_a_OBJECTS) $(libdvisvgm_a_DEPENDENCIES) $(EXTRA_libdvisvgm_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libdvisvgm.a
	$(AM_V_AR)$(libdvisvgm_a_AR) libdvisvgm.a $(libdvisvgm_a_OBJECTS) $(libdvisvgm_a_LIBADD)
	$(AM_V_at)$(RANLIB) libdvisvgm.a
dvisvgm-src/xxHash/$(am__dirstamp):
	@$(MKDIR_P) dvisvgm-src/xxHash
	@: > dvisvgm-src/xxHash/$(am__dirstamp)
dvisvgm-src/xxHash/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dvisvgm-src/xxHash/$(DEPDIR)
	@: > dvisvgm-src/xxHash/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/xxHash/xxhash.$(OBJEXT):  \
	dvisvgm-src/xxHash/$(am__dirstamp) \
	dvisvgm-src/xxHash/$(DEPDIR)/$(am__dirstamp)

libxxhash.a: $(libxxhash_a_OBJECTS) $(libxxhash_a_DEPENDENCIES) $(EXTRA_libxxhash_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libxxhash.a
	$(AM_V_AR)$(libxxhash_a_AR) libxxhash.a $(libxxhash_a_OBJECTS) $(libxxhash_a_LIBADD)
	$(AM_V_at)$(RANLIB) libxxhash.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
dvisvgm-src/src/dvisvgm.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
dvisvgm-src/src/gzstream.$(OBJEXT):  \
	dvisvgm-src/src/$(am__dirstamp) \
	dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)

dvisvgm$(EXEEXT): $(dvisvgm_OBJECTS) $(dvisvgm_DEPENDENCIES) $(EXTRA_dvisvgm_DEPENDENCIES) 
	@rm -f dvisvgm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dvisvgm_OBJECTS) $(dvisvgm_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f dvisvgm-src/clipper/*.$(OBJEXT)
	-rm -f dvisvgm-src/src/*.$(OBJEXT)
	-rm -f dvisvgm-src/xxHash/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include dvisvgm-src/clipper/$(DEPDIR)/clipper.Po
include dvisvgm-src/src/$(DEPDIR)/BasicDVIReader.Po
include dvisvgm-src/src/$(DEPDIR)/Bezier.Po
include dvisvgm-src/src/$(DEPDIR)/BgColorSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/Bitmap.Po
include dvisvgm-src/src/$(DEPDIR)/BoundingBox.Po
include dvisvgm-src/src/$(DEPDIR)/CMap.Po
include dvisvgm-src/src/$(DEPDIR)/CMapManager.Po
include dvisvgm-src/src/$(DEPDIR)/CMapReader.Po
include dvisvgm-src/src/$(DEPDIR)/CRC32.Po
include dvisvgm-src/src/$(DEPDIR)/Calculator.Po
include dvisvgm-src/src/$(DEPDIR)/CharMapID.Po
include dvisvgm-src/src/$(DEPDIR)/CmdLineParserBase.Po
include dvisvgm-src/src/$(DEPDIR)/Color.Po
include dvisvgm-src/src/$(DEPDIR)/ColorSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/CommandLine.Po
include dvisvgm-src/src/$(DEPDIR)/DLLoader.Po
include dvisvgm-src/src/$(DEPDIR)/DVIReader.Po
include dvisvgm-src/src/$(DEPDIR)/DVIToSVG.Po
include dvisvgm-src/src/$(DEPDIR)/DVIToSVGActions.Po
include dvisvgm-src/src/$(DEPDIR)/Directory.Po
include dvisvgm-src/src/$(DEPDIR)/DvisvgmSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/EPSFile.Po
include dvisvgm-src/src/$(DEPDIR)/EPSToSVG.Po
include dvisvgm-src/src/$(DEPDIR)/EmSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/EncFile.Po
include dvisvgm-src/src/$(DEPDIR)/FileFinder.Po
include dvisvgm-src/src/$(DEPDIR)/FilePath.Po
include dvisvgm-src/src/$(DEPDIR)/FileSystem.Po
include dvisvgm-src/src/$(DEPDIR)/Font.Po
include dvisvgm-src/src/$(DEPDIR)/FontCache.Po
include dvisvgm-src/src/$(DEPDIR)/FontEncoding.Po
include dvisvgm-src/src/$(DEPDIR)/FontEngine.Po
include dvisvgm-src/src/$(DEPDIR)/FontManager.Po
include dvisvgm-src/src/$(DEPDIR)/FontMap.Po
include dvisvgm-src/src/$(DEPDIR)/FontMetrics.Po
include dvisvgm-src/src/$(DEPDIR)/GFGlyphTracer.Po
include dvisvgm-src/src/$(DEPDIR)/GFReader.Po
include dvisvgm-src/src/$(DEPDIR)/GFTracer.Po
include dvisvgm-src/src/$(DEPDIR)/Ghostscript.Po
include dvisvgm-src/src/$(DEPDIR)/HtmlSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/InputBuffer.Po
include dvisvgm-src/src/$(DEPDIR)/InputReader.Po
include dvisvgm-src/src/$(DEPDIR)/JFM.Po
include dvisvgm-src/src/$(DEPDIR)/Length.Po
include dvisvgm-src/src/$(DEPDIR)/MapLine.Po
include dvisvgm-src/src/$(DEPDIR)/Matrix.Po
include dvisvgm-src/src/$(DEPDIR)/Message.Po
include dvisvgm-src/src/$(DEPDIR)/MetafontWrapper.Po
include dvisvgm-src/src/$(DEPDIR)/NoPsSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/PSInterpreter.Po
include dvisvgm-src/src/$(DEPDIR)/PSPattern.Po
include dvisvgm-src/src/$(DEPDIR)/PSPreviewFilter.Po
include dvisvgm-src/src/$(DEPDIR)/PageRanges.Po
include dvisvgm-src/src/$(DEPDIR)/PageSize.Po
include dvisvgm-src/src/$(DEPDIR)/PathClipper.Po
include dvisvgm-src/src/$(DEPDIR)/PdfSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/PreScanDVIReader.Po
include dvisvgm-src/src/$(DEPDIR)/Process.Po
include dvisvgm-src/src/$(DEPDIR)/PsSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/RangeMap.Po
include dvisvgm-src/src/$(DEPDIR)/SVGOutput.Po
include dvisvgm-src/src/$(DEPDIR)/SVGTree.Po
include dvisvgm-src/src/$(DEPDIR)/ShadingPatch.Po
include dvisvgm-src/src/$(DEPDIR)/SignalHandler.Po
include dvisvgm-src/src/$(DEPDIR)/SpecialManager.Po
include dvisvgm-src/src/$(DEPDIR)/StreamReader.Po
include dvisvgm-src/src/$(DEPDIR)/StreamWriter.Po
include dvisvgm-src/src/$(DEPDIR)/Subfont.Po
include dvisvgm-src/src/$(DEPDIR)/System.Po
include dvisvgm-src/src/$(DEPDIR)/TFM.Po
include dvisvgm-src/src/$(DEPDIR)/TensorProductPatch.Po
include dvisvgm-src/src/$(DEPDIR)/Terminal.Po
include dvisvgm-src/src/$(DEPDIR)/ToUnicodeMap.Po
include dvisvgm-src/src/$(DEPDIR)/TpicSpecialHandler.Po
include dvisvgm-src/src/$(DEPDIR)/TriangularPatch.Po
include dvisvgm-src/src/$(DEPDIR)/Unicode.Po
include dvisvgm-src/src/$(DEPDIR)/VFReader.Po
include dvisvgm-src/src/$(DEPDIR)/XMLDocument.Po
include dvisvgm-src/src/$(DEPDIR)/XMLNode.Po
include dvisvgm-src/src/$(DEPDIR)/XMLString.Po
include dvisvgm-src/src/$(DEPDIR)/dvisvgm.Po
include dvisvgm-src/src/$(DEPDIR)/gzstream.Po
include dvisvgm-src/src/$(DEPDIR)/psdefs.Po
include dvisvgm-src/xxHash/$(DEPDIR)/xxhash.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(nodist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(nodist_man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(nodist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(MANS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f dvisvgm-src/clipper/$(DEPDIR)/$(am__dirstamp)
	-rm -f dvisvgm-src/clipper/$(am__dirstamp)
	-rm -f dvisvgm-src/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f dvisvgm-src/src/$(am__dirstamp)
	-rm -f dvisvgm-src/xxHash/$(DEPDIR)/$(am__dirstamp)
	-rm -f dvisvgm-src/xxHash/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf dvisvgm-src/clipper/$(DEPDIR) dvisvgm-src/src/$(DEPDIR) dvisvgm-src/xxHash/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf dvisvgm-src/clipper/$(DEPDIR) dvisvgm-src/src/$(DEPDIR) dvisvgm-src/xxHash/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-man

uninstall-man: uninstall-man1

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-cscope clean-generic \
	clean-libtool clean-noinstLIBRARIES cscope cscopelist-am ctags \
	ctags-am dist dist-all dist-bzip2 dist-gzip dist-hook \
	dist-lzip dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-man1 install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-man uninstall-man1

.PRECIOUS: Makefile

dist-hook:
	cd "$(distdir)" && rm -rf $(NEVER_DIST)

$(dvisvgm_OBJECTS): $(noinst_LIBRARIES)

$(libdvisvgm_a_OBJECTS): $(POTRACE_DEPEND)

config.force: $(dvisvgm_dependencies)
	echo timestamp >config.force
	$(SHELL) ./config.status --recheck

# Rebuild libkpathsea
$(KPATHSEA_DEPEND): ${top_srcdir}/../kpathsea/*.[ch] ${top_builddir}/../kpathsea/paths.h
	cd ${top_builddir}/../kpathsea && $(MAKE) $(AM_MAKEFLAGS) rebuild
${top_builddir}/../kpathsea/paths.h:
	cd ${top_builddir}/../kpathsea && $(MAKE) $(AM_MAKEFLAGS) rebuild
# Rebuild libpotrace
$(POTRACE_DEPEND): ${top_builddir}/../../libs/potrace/include/potracelib.h
	cd ${top_builddir}/../../libs/potrace && $(MAKE) $(AM_MAKEFLAGS) rebuild
${top_builddir}/../../libs/potrace/include/potracelib.h:
	cd ${top_builddir}/../../libs/potrace && $(MAKE) $(AM_MAKEFLAGS) rebuild
# Rebuild libfreetype
$(FREETYPE2_DEPEND): ${top_builddir}/../../libs/freetype2/freetype2/ft2build.h
	cd ${top_builddir}/../../libs/freetype2 && $(MAKE) $(AM_MAKEFLAGS) rebuild
${top_builddir}/../../libs/freetype2/freetype2/ft2build.h:
	cd ${top_builddir}/../../libs/freetype2 && $(MAKE) $(AM_MAKEFLAGS) rebuild
# Rebuild libz
$(ZLIB_DEPEND): ${top_builddir}/../../libs/zlib/include/zconf.h
	cd ${top_builddir}/../../libs/zlib && $(MAKE) $(AM_MAKEFLAGS) rebuild
${top_builddir}/../../libs/zlib/include/zconf.h:
	cd ${top_builddir}/../../libs/zlib && $(MAKE) $(AM_MAKEFLAGS) rebuild
tests/dvisvgm.log: dvisvgm$(EXEEXT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
