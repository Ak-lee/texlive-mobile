# Makefile.in generated by automake 1.15 from Makefile.am.
# omegafonts/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/web2c
pkgincludedir = $(includedir)/web2c
pkglibdir = $(libdir)/web2c
pkglibexecdir = $(libexecdir)/web2c
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1)
am__append_1 = omfonts
#noinst_PROGRAMS = call_omfonts$(EXEEXT)
EXTRA_PROGRAMS = omfonts$(EXEEXT)
subdir = omegafonts
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/web2c-disable.m4 \
	$(top_srcdir)/../../m4/kpse-asm.m4 \
	$(top_srcdir)/../../m4/kpse-cairo-flags.m4 \
	$(top_srcdir)/../../m4/kpse-common.m4 \
	$(top_srcdir)/../../m4/kpse-cross.m4 \
	$(top_srcdir)/../../m4/kpse-cxx-hack.m4 \
	$(top_srcdir)/../../m4/kpse-fontconfig-flags.m4 \
	$(top_srcdir)/../../m4/kpse-freetype2-flags.m4 \
	$(top_srcdir)/../../m4/kpse-gmp-flags.m4 \
	$(top_srcdir)/../../m4/kpse-graphite2-flags.m4 \
	$(top_srcdir)/../../m4/kpse-harfbuzz-flags.m4 \
	$(top_srcdir)/../../m4/kpse-icu-flags.m4 \
	$(top_srcdir)/../../m4/kpse-kpathsea-flags.m4 \
	$(top_srcdir)/../../m4/kpse-lex.m4 \
	$(top_srcdir)/../../m4/kpse-lib-version.m4 \
	$(top_srcdir)/../../m4/kpse-libpng-flags.m4 \
	$(top_srcdir)/../../m4/kpse-lt-hack.m4 \
	$(top_srcdir)/../../m4/kpse-lua52-flags.m4 \
	$(top_srcdir)/../../m4/kpse-luajit-flags.m4 \
	$(top_srcdir)/../../m4/kpse-macos-framework.m4 \
	$(top_srcdir)/../../m4/kpse-mpfr-flags.m4 \
	$(top_srcdir)/../../m4/kpse-pixman-flags.m4 \
	$(top_srcdir)/../../m4/kpse-poppler-flags.m4 \
	$(top_srcdir)/../../m4/kpse-ptexenc-flags.m4 \
	$(top_srcdir)/../../m4/kpse-socket-libs.m4 \
	$(top_srcdir)/../../m4/kpse-teckit-flags.m4 \
	$(top_srcdir)/../../m4/kpse-warnings.m4 \
	$(top_srcdir)/../../m4/kpse-web2c.m4 \
	$(top_srcdir)/../../m4/kpse-win32.m4 \
	$(top_srcdir)/../../m4/kpse-xpdf-flags.m4 \
	$(top_srcdir)/../../m4/kpse-zlib-flags.m4 \
	$(top_srcdir)/../../m4/kpse-zziplib-flags.m4 \
	$(top_srcdir)/../../m4/libtool.m4 \
	$(top_srcdir)/../../m4/ltoptions.m4 \
	$(top_srcdir)/../../m4/ltsugar.m4 \
	$(top_srcdir)/../../m4/ltversion.m4 \
	$(top_srcdir)/../../m4/lt~obsolete.m4 \
	$(top_srcdir)/../../version.ac $(top_srcdir)/ac/web2c.ac \
	$(top_srcdir)/synctexdir/ac/synctex.ac \
	$(top_srcdir)/synctexdir/synctex_parser_version.txt \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/w2c/c-auto.h \
	$(top_builddir)/ff-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = omfonts$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
nodist_call_omfonts_OBJECTS = ../call_omfonts-callexe.$(OBJEXT)
call_omfonts_OBJECTS = $(nodist_call_omfonts_OBJECTS)
call_omfonts_DEPENDENCIES =
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_omfonts_OBJECTS = char_routines.$(OBJEXT) dimen_routines.$(OBJEXT) \
	error_routines.$(OBJEXT) extra_routines.$(OBJEXT) \
	font_routines.$(OBJEXT) header_routines.$(OBJEXT) \
	ligkern_routines.$(OBJEXT) list_routines.$(OBJEXT) \
	omfonts.$(OBJEXT) out_ofm.$(OBJEXT) out_routines.$(OBJEXT) \
	param_routines.$(OBJEXT) parse_ofm.$(OBJEXT) \
	pl-parser.$(OBJEXT) pl-lexer.$(OBJEXT) \
	print_routines.$(OBJEXT)
omfonts_OBJECTS = $(am_omfonts_OBJECTS)
omfonts_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/w2c -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/../../build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
am__skiplex = test -f $@ ||
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/../../build-aux/ylwrap
am__skipyacc = test -f $@ ||
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(nodist_call_omfonts_SOURCES) $(omfonts_SOURCES)
DIST_SOURCES = $(omfonts_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/../../build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/../../am/bin_links.am \
	$(top_srcdir)/../../build-aux/depcomp \
	$(top_srcdir)/../../build-aux/test-driver \
	$(top_srcdir)/../../build-aux/ylwrap ChangeLog pl-lexer.c \
	pl-parser.c pl-parser.h
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing automake-1.15
AWK = gawk
CAIRO_DEPEND = ${top_builddir}/../../libs/cairo/libcairo.a
CAIRO_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/cairo/cairo
CAIRO_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/cairo/libcairo.a
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CTANGLE = ./ctangle
CTANGLEBOOT = ./ctangleboot
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CXXLD = $(top_builddir)/CXXLD.sh
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FONTCONFIG_INCLUDES = -I/usr/include/freetype2
FONTCONFIG_LIBS = -lfontconfig -lfreetype
FREETYPE2_DEPEND = ${top_builddir}/../../libs/freetype2/libfreetype.a
FREETYPE2_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/freetype2/freetype2
FREETYPE2_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/freetype2/libfreetype.a
FT2_CONFIG = 
GMP_DEPEND = ${top_builddir}/../../libs/gmp/libgmp.a
GMP_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/gmp/include
GMP_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/gmp/libgmp.a
GRAPHITE2_DEPEND = ${top_builddir}/../../libs/graphite2/libgraphite2.a
GRAPHITE2_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/graphite2/include -DGRAPHITE2_STATIC
GRAPHITE2_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/graphite2/libgraphite2.a
GREP = /bin/grep
HARFBUZZ_DEPEND = ${top_builddir}/../../libs/harfbuzz/libharfbuzz.a
HARFBUZZ_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/harfbuzz/include
HARFBUZZ_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/harfbuzz/libharfbuzz.a
ICU_CONFIG = 
ICU_DEPEND =  ${top_builddir}/../../libs/icu/icu-build/lib/libicuuc.a ${top_builddir}/../../libs/icu/icu-build/lib/libicudata.a
ICU_INCLUDES = -DU_STATIC_IMPLEMENTATION -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/icu/include
ICU_LIBS =  /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/icu/icu-build/lib/libicuuc.a /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/icu/icu-build/lib/libicudata.a
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KPATHSEA_DEPEND = ${top_builddir}/../kpathsea/libkpathsea.la
KPATHSEA_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk
KPATHSEA_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/kpathsea/libkpathsea.la
KPATHSEA_PATHS_H = ${top_builddir}/..
KPSEWHICH = kpsewhich
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex -l
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBPNG_DEPEND = ${top_builddir}/../../libs/libpng/libpng.a
LIBPNG_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/libpng/include
LIBPNG_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/libpng/libpng.a
LIBS = -lm 
LIBSYNCTEX = libsynctex.a
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTLIBSYNCTEX = 
LT_SYS_LIBRARY_PATH = 
LUA52_DEFINES = -DLUA_COMPAT_MODULE -DLUAI_HASHLIMIT=6 -DLUA_USE_POSIX -DLUA_USE_DLOPEN
LUA52_DEPEND = ${top_builddir}/../../libs/lua52/libtexlua52.la
LUA52_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/lua52/include
LUA52_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/lua52/libtexlua52.la
LUAJIT_DEFINES = -DLUAJIT_ENABLE_LUA52COMPAT -DLUAI_HASHLIMIT=6
LUAJIT_DEPEND = ${top_builddir}/../../libs/luajit/libtexluajit.la
LUAJIT_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/luajit/include
LUAJIT_LDEXTRA = 
LUAJIT_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/luajit/libtexluajit.la
MAINT = #
MAKEINFO = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MPFR_DEPEND = ${top_builddir}/../../libs/mpfr/libmpfr.a
MPFR_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/mpfr/include
MPFR_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/mpfr/libmpfr.a
NM = /usr/bin/nm -B
NMEDIT = 
OBJCXX = g++
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTANGLE = ./otangle
OTOOL = 
OTOOL64 = 
PACKAGE = web2c
PACKAGE_BUGREPORT = tex-k@tug.org
PACKAGE_NAME = Web2C
PACKAGE_STRING = Web2C 2016/dev
PACKAGE_TARNAME = web2c
PACKAGE_URL = 
PACKAGE_VERSION = 2016/dev
PATH_SEPARATOR = :
PIXMAN_DEPEND = ${top_builddir}/../../libs/pixman/libpixman.a
PIXMAN_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/pixman/include
PIXMAN_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/pixman/libpixman.a
PKG_CONFIG = pkg-config
POPPLER_DEPEND = ${top_builddir}/../../libs/poppler/libpoppler.a
POPPLER_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/poppler/include
POPPLER_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/poppler/libpoppler.a
PTEXENC_DEPEND = ${top_builddir}/../ptexenc/libptexenc.la
PTEXENC_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/ptexenc -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/ptexenc
PTEXENC_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/ptexenc/libptexenc.la
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SYNCTEXVERSION = 1.18.0
SYNCTEX_LT_VERSINFO = 19:0:18
TANGLE = ./tangle
TANGLEBOOT = ./tangleboot
TECKIT_DEPEND = ${top_builddir}/../../libs/teckit/libTECkit.a
TECKIT_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/teckit/include
TECKIT_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/teckit/libTECkit.a
TIE = ./tie
VERSION = 2016/dev
WARNING_CFLAGS = -Wimplicit -Wreturn-type -Wdeclaration-after-statement -Wno-unknown-pragmas
WARNING_CXXFLAGS = -Wreturn-type -Wno-unknown-pragmas -Wno-write-strings
WARNING_OBJCXXFLAGS = 
WEB2CVERSION = 2016/dev
XMKMF = 
XPDF_DEPEND = ${top_builddir}/../../libs/xpdf/libxpdf.a
XPDF_INCLUDES = -DPDF_PARSER_ONLY -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/xpdf -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/xpdf/goo -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/xpdf/xpdf
XPDF_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/xpdf/libxpdf.a
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
YACC = bison -y
YFLAGS = 
ZLIB_DEPEND = ${top_builddir}/../../libs/zlib/libz.a
ZLIB_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/zlib/include
ZLIB_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/zlib/libz.a
ZZIPLIB_DEPEND = ${top_builddir}/../../libs/zziplib/libzzip.a
ZZIPLIB_INCLUDES = -I/home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/zziplib/include
ZZIPLIB_LIBS = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/libs/zziplib/libzzip.a
abs_builddir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/web2c/omegafonts
abs_srcdir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/web2c/omegafonts
abs_top_builddir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/web2c
abs_top_srcdir = /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/texk/web2c
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin/x86_64-pc-linux-gnu
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/texmf-dist/doc/info
install_sh = ${SHELL} /home/maqiyuan/Desktop/texlive-mobile/src/texlive-source/build-aux/install-sh
ipc_socketlibs = 
libdir = ${exec_prefix}/lib/x86_64-pc-linux-gnu
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lua_socketlibs =  -ldl
mandir = ${prefix}/texmf-dist/doc/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  web2c
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
wlibs =  -lX11
x_ext_lib = -lXext
x_tool_libs = 
AM_CPPFLAGS = -I$(top_builddir)/.. -I$(top_srcdir) $(KPATHSEA_INCLUDES) -DNOT_WEB2C
AM_CFLAGS = $(WARNING_CFLAGS)
AM_YFLAGS = -d -v
proglib = ../lib/lib.a
omfonts_SOURCES = \
	char_routines.c \
	char_routines.h \
	dimen_routines.c \
	dimen_routines.h \
	dvi.h \
	error_routines.c \
	error_routines.h \
	extra_routines.c \
	extra_routines.h \
	font_routines.c \
	font_routines.h \
	header_routines.c \
	header_routines.h \
	ligkern_routines.c \
	ligkern_routines.h \
	list_routines.c \
	list_routines.h \
	manifests.h \
	omfonts.c \
	omfonts.h \
	out_ofm.c \
	out_ofm.h \
	out_routines.c \
	out_routines.h \
	param_routines.c \
	param_routines.h \
	parse_ofm.c \
	parse_ofm.h \
	parser.h \
	pl-parser.y \
	pl-lexer.l \
	print_routines.c \
	print_routines.h

LDADD = $(proglib) $(KPATHSEA_LIBS)
omfonts_DEPENDENCIES = $(proglib) $(KPATHSEA_DEPEND)
call_omfonts_CPPFLAGS = -DEXEPROG=\"omfonts.exe\"
nodist_call_omfonts_SOURCES = ../callexe.c
call_omfonts_LDADD = 
DISTCLEANFILES = pl-parser.output bad*.* tests/charwdr.* \
	tests/charwdv.* tests/xcheck* tests/xlevel1.* tests/xlig*.* \
	tests/xofont* tests/Cherokee.tfm tests/OCherokee.ofm \
	tests/OCherokee.opl tests/OCherokee.ovf tests/xCherokee.* \
	tests/xOCherokee.* tests/xinbmp* tests/xoverbmp* \
	tests/realnum.* tests/xrepeated.* tests/sample*.ofm \
	tests/sample*.ovf tests/sample1-h.opl tests/xsample*.out \
	tests/shortend.* tests/specialhex.ofm tests/specialhex.opl \
	tests/specialhex.ovf tests/xspecialhex.* tests/*yarabic*
linked_programs = ofm2opl opl2ofm ovf2ovp ovp2ovf
bin_links = \
	omfonts$(EXEEXT):ofm2opl \
	omfonts$(EXEEXT):opl2ofm \
	omfonts$(EXEEXT):ovf2ovp \
	omfonts$(EXEEXT):ovp2ovf

OMFONTS_tests = bad.test charwd.test check.test help.test level1.test ligkern.test \
	ofonts.test omfonts.test overbmp.test realnum.test repeat.test \
	selectfont.test shorten.test specialhex.test version.test yannis.test

TESTS = $(OMFONTS_tests)
EXTRA_DIST = $(OMFONTS_tests) tests/badofm.ofm tests/badopl.opl \
	tests/badovf.ofm tests/badovf.ovf tests/badovp.ovp \
	tests/charwd-r.pl tests/charwd-v.vpl tests/check.ofm \
	tests/check.opl tests/checked.opl tests/level1.opl \
	tests/ligall.opl tests/ligbch.opl tests/ligbdy.opl \
	tests/ligblb.opl tests/ligblv.opl tests/ligblv.ovp \
	tests/ligloop1.ofm tests/ligloop1.opl tests/ligloop2.opl \
	tests/liguse.opl tests/liguse1.opl tests/liguse2.opl \
	tests/ofontr0.pl tests/ofontr1.pl tests/ofontr1.vpl \
	tests/ofontr2.opl tests/ofontr2.ovp tests/ofontr3.opl \
	tests/ofontr3.ovp tests/ofontv4.pl tests/ofontv4.vpl \
	tests/ofontv5.opl tests/ofontv5.ovp tests/ofontv6.opl \
	tests/ofontv6.ovp tests/Cherokee.pl tests/OCherokee.ovp \
	tests/inbmp.opl tests/overbmp.opl tests/overbmp.ovp \
	tests/realnum.opl tests/realnum.out tests/repeat.opl \
	tests/repeated.opl tests/sample.out tests/sample.ovp \
	tests/sample0-h.opl tests/shorten.opl tests/specialhex.ovp \
	tests/arabicr.pl tests/arabic.ovp
all: all-am

.SUFFIXES:
.SUFFIXES: .c .l .lo .log .o .obj .test .test$(EXEEXT) .trs .y
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/../../am/bin_links.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign omegafonts/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign omegafonts/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/../../am/bin_links.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
../$(am__dirstamp):
	@$(MKDIR_P) ..
	@: > ../$(am__dirstamp)
../$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../$(DEPDIR)
	@: > ../$(DEPDIR)/$(am__dirstamp)
../call_omfonts-callexe.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)

call_omfonts$(EXEEXT): $(call_omfonts_OBJECTS) $(call_omfonts_DEPENDENCIES) $(EXTRA_call_omfonts_DEPENDENCIES) 
	@rm -f call_omfonts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(call_omfonts_OBJECTS) $(call_omfonts_LDADD) $(LIBS)
pl-parser.h: pl-parser.c
	@if test ! -f $@; then rm -f pl-parser.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) pl-parser.c; else :; fi

omfonts$(EXEEXT): $(omfonts_OBJECTS) $(omfonts_DEPENDENCIES) $(EXTRA_omfonts_DEPENDENCIES) 
	@rm -f omfonts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(omfonts_OBJECTS) $(omfonts_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ../$(DEPDIR)/call_omfonts-callexe.Po
include ./$(DEPDIR)/char_routines.Po
include ./$(DEPDIR)/dimen_routines.Po
include ./$(DEPDIR)/error_routines.Po
include ./$(DEPDIR)/extra_routines.Po
include ./$(DEPDIR)/font_routines.Po
include ./$(DEPDIR)/header_routines.Po
include ./$(DEPDIR)/ligkern_routines.Po
include ./$(DEPDIR)/list_routines.Po
include ./$(DEPDIR)/omfonts.Po
include ./$(DEPDIR)/out_ofm.Po
include ./$(DEPDIR)/out_routines.Po
include ./$(DEPDIR)/param_routines.Po
include ./$(DEPDIR)/parse_ofm.Po
include ./$(DEPDIR)/pl-lexer.Po
include ./$(DEPDIR)/pl-parser.Po
include ./$(DEPDIR)/print_routines.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

../call_omfonts-callexe.o: ../callexe.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(call_omfonts_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../call_omfonts-callexe.o -MD -MP -MF ../$(DEPDIR)/call_omfonts-callexe.Tpo -c -o ../call_omfonts-callexe.o `test -f '../callexe.c' || echo '$(srcdir)/'`../callexe.c
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/call_omfonts-callexe.Tpo ../$(DEPDIR)/call_omfonts-callexe.Po
#	$(AM_V_CC)source='../callexe.c' object='../call_omfonts-callexe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(call_omfonts_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../call_omfonts-callexe.o `test -f '../callexe.c' || echo '$(srcdir)/'`../callexe.c

../call_omfonts-callexe.obj: ../callexe.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(call_omfonts_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../call_omfonts-callexe.obj -MD -MP -MF ../$(DEPDIR)/call_omfonts-callexe.Tpo -c -o ../call_omfonts-callexe.obj `if test -f '../callexe.c'; then $(CYGPATH_W) '../callexe.c'; else $(CYGPATH_W) '$(srcdir)/../callexe.c'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/call_omfonts-callexe.Tpo ../$(DEPDIR)/call_omfonts-callexe.Po
#	$(AM_V_CC)source='../callexe.c' object='../call_omfonts-callexe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(call_omfonts_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../call_omfonts-callexe.obj `if test -f '../callexe.c'; then $(CYGPATH_W) '../callexe.c'; else $(CYGPATH_W) '$(srcdir)/../callexe.c'; fi`

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../$(DEPDIR)/$(am__dirstamp)
	-rm -f ../$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f pl-lexer.c
	-rm -f pl-parser.c
	-rm -f pl-parser.h
#install-exec-hook:
#uninstall-hook:
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ../$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ../$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: check-am install-am install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-hook

.PRECIOUS: Makefile


# Rebuild $(proglib)
$(proglib): ${top_srcdir}/lib/*.c
	cd ../lib && $(MAKE) $(AM_MAKEFLAGS)

# Rebuild libkpathsea
$(KPATHSEA_DEPEND): ${top_srcdir}/../kpathsea/*.[ch] ${top_builddir}/../kpathsea/paths.h
	cd ${top_builddir}/../kpathsea && $(MAKE) $(AM_MAKEFLAGS) rebuild
${top_builddir}/../kpathsea/paths.h:
	cd ${top_builddir}/../kpathsea && $(MAKE) $(AM_MAKEFLAGS) rebuild
.PHONY: install-bin-links uninstall-bin-links

install-bin-links:
	@cd $(DESTDIR)$(bindir) && \
	  for s in $(bin_links); do \
	    link=`echo $$s | sed 's,.*:,,'`; \
	    file=`echo $$s | sed 's,:.*,,'`; \
	    rm -f $$link; \
	    echo "creating link '$$link' -> '$$file'"; \
	    $(LN_S) $$file $$link || exit 1; \
	  done

uninstall-bin-links:
	@for s in $(bin_links); do \
	  link=`echo $$s | sed 's,.*:,,'`; \
	  rm -f $(DESTDIR)$(bindir)/$$link; \
	done

install-exec-hook: install-bin-links
#	for f in $(linked_programs); do \
#	  $(INSTALL_PROGRAM) call_omfonts$(EXEEXT) $(DESTDIR)$(bindir)/$$f$(EXEEXT) || exit 1; \
#	done
uninstall-hook: uninstall-bin-links
#	for f in $(linked_programs); do \
#	  rm -f $(DESTDIR)$(bindir)/$$f$(EXEEXT); \
#	done
bad.log charwd.log check.log help.log level1.log ligkern.log \
	ofonts.log overbmp.log realnum.log repeat.log \
	selectfont.log specialhex.log version.log: omfonts$(EXEEXT)
omfonts.log: omfonts$(EXEEXT) ../pltotf$(EXEEXT) ../tftopl$(EXEEXT)
shorten.log yannis.log: omfonts$(EXEEXT) ../pltotf$(EXEEXT)
../pltotf$(EXEEXT):
	cd .. && $(MAKE) $(AM_MAKEFLAGS) pltotf$(EXEEXT)
../tftopl$(EXEEXT):
	cd .. && $(MAKE) $(AM_MAKEFLAGS) tftopl$(EXEEXT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
